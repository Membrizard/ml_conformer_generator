{"version":3,"sources":["elements.js","gl-matrix.js","view.js","const.js","system.js","index.tsx","renderer.js","webgl.js","cube.js","shaders.js","interactions.js","colors.js"],"names":["module","exports","_global","shim","GLMAT_EPSILON","GLMAT_ARRAY_TYPE","Float32Array","Array","GLMAT_RANDOM","Math","random","glMatrix","type","degree","PI","toRadian","a","vec2","out","x","y","b","sub","subtract","multiply","mul","divide","div","min","max","scale","scaleAndAdd","distance","sqrt","dist","squaredDistance","sqrDist","length","len","squaredLength","sqrLen","negate","inverse","normalize","dot","cross","z","lerp","t","ax","ay","r","cos","sin","transformMat2","m","transformMat2d","transformMat3","transformMat4","forEach","vec","create","stride","offset","count","fn","arg","i","l","str","vec3","az","bx","by","bz","zScale","w","transformQuat","q","qx","qy","qz","qw","ix","iy","iz","iw","rotateX","c","p","rotateY","rotateZ","angle","tempA","fromValues","tempB","cosine","acos","vec4","aw","mat2","a1","a0","a2","a3","det","b0","b1","b2","b3","rotate","rad","s","v","v0","v1","frob","pow","LDU","L","D","U","mat2d","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","translate","mat3","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","b00","b02","b10","b12","b20","b22","fromMat2d","fromQuat","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","mat4","axis","abs","fromRotationTranslation","xy","xz","yz","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","identity","quat","rotationTo","tmpvec3","xUnitVec3","yUnitVec3","setAxisAngle","setAxes","matr","view","fromMat3","clone","copy","set","add","bw","calculateW","slerp","omega","cosom","sinom","scale0","scale1","invert","invDot","conjugate","fRoot","fTrace","j","k","_","require","glm","elements","consts","clamp","value","new","zoom","translation","atomScale","relativeAtomScale","bondScale","rotation","ao","aoRes","brightness","outline","spf","bonds","bondThreshold","bondShade","atomShade","resolution","dofStrength","dofPosition","fxaa","cloneDeep","system","maxX","Infinity","minX","maxY","minY","atoms","symbol","radius","cx","cy","mres","override","data","key","resolve","deserialize","serialize","JSON","stringify","parse","dx","dy","dz","getRect","width","height","getBondRadius","MIN_ATOM_RADIUS","MAX_ATOM_RADIUS","getCentroid","farAtom","undefined","addAtom","push","addBond","idxA","idxB","elems","atom_a","atom_b","ea","eb","begin","end","posA","posB","radA","radB","colA","color","g","colB","cutoff","updateBondsColor","xsum","ysum","zsum","getFarAtom","shift","atom","maxd","rd","d","getRadius","speckRenderer","speckSystem","speckView","speckInteractions","speckColors","renderer","needReset","current_schema","view_position","container","document","createElement","canvas","addEventListener","topbar","style","position","background","flexDirection","alignContent","display","infoc","fontSize","autoscale","createElementNS","setAttribute","innerHTML","autoscalec","padding","append","camera","saveSnapshot","camerac","palette","switchColorSchema","palettec","front","frontc","sti","stickball","updateModel","stic","lic","licorice","licc","fil","fill","filc","body","appendChild","scrollZoom","getRotation","setRotation","getTranslation","setTranslation","getZoom","setZoom","refreshView","render","imgURL","toDataURL","href","download","click","setColorSchema","schema","setSystem","setAtomsColor","update_color","first_color","Streamlit","setComponentValue","events","RENDER_EVENT","event","detail","console","log","args","ww","clientWidth","wh","clientHeight","reflow","loop","reset","requestAnimationFrame","json_data","begin_atom","end_atom","loadStructureFromJson","setFrameHeight","setComponentReady","webgl","cube","View","System","shaders","loadProgram","gl","src","split","Program","aoResolution","range","tSceneColor","tSceneNormal","tSceneDepth","tRandRotDepth","tRandRotColor","tAccumulator","tAccumulatorOut","tFXAA","tFXAAOut","tDOF","tAO","fbSceneColor","fbSceneNormal","fbRandRot","fbAccumulator","fbFXAA","fbAO","progAtoms","progBonds","progAccumulator","progAO","progFXAA","progDOF","progDisplayQuad","m_resolution","self","this","rAtoms","rBonds","rAccumulator","rAO","rDOF","rFXAA","sampleCount","colorRendered","normalRendered","sample","viewport","rot","bind","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","rect","projection","viewMat","model","setUniform","sceneRect","rotRect","invRot","index","activate","copyTexImage2D","TEXTURE_2D","RGBA","getAOProgress","initialize","getContext","enable","DEPTH_TEST","CULL_FACE","clearColor","clearDepth","window","getExtensions","createTextures","attribs","buildAttribs","aPosition","buffer","Renderable","Texture","internalFormat","DEPTH_COMPONENT","format","UNSIGNED_SHORT","Framebuffer","setResolution","res","newSystem","make36","arr","apply","aImposter","aRadius","aColor","imposter","aPosA","aPosB","aRadA","aRadB","aColA","aColB","posa","posb","rada","radb","cola","colb","normal","bindFramebuffer","FRAMEBUFFER","GLBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","layout","size","extArray","ext","e","getExtension","depth","fb","createFramebuffer","drawBuffers","drawBuffersWEBGL","framebufferTexture2D","texture","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","options","target","mag","NEAREST","wraps","CLAMP_TO_EDGE","wrapt","UNSIGNED_BYTE","createTexture","texParameteri","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texImage2D","bindTexture","activeTexture","TEXTURE0","program","buffers","primitiveCount","name","use","location","enableVertexAttribArray","vertexAttribPointer","FLOAT","drawArrays","TRIANGLES","disableVertexAttribArray","attributes","InstancedRenderable","instancedExt","vertexAttribDivisorANGLE","divisor","drawArraysInstancedANGLE","vertexSource","fragmentSource","compileProgram","gatherAttribs","uniforms","gatherUniforms","useProgram","vertexShader","compileShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","source","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","err","getShaderInfoLog","lineno","parseInt","warn","prototype","slice","call","arguments","concat","nUniforms","ACTIVE_UNIFORMS","uniform","getActiveUniform","getUniformLocation","nAttribs","ACTIVE_ATTRIBUTES","attrib","getActiveAttrib","getAttribLocation","n","interactions","buttonDown","shiftDown","lastX","lastY","mousedownFn","button","clientX","clientY","mouseupFn","keychangeFn","shiftKey","mousemoveFn","buttons","preventDefault","inverseZoom","viewDummyObj","wheelFn","deltaY","removeAllEventListeners","removeEventListener","reference_struct_colors","standard_schema","Object","assign"],"mappings":"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","file":"static/js/main.660c91af.chunk.js","sourcesContent":["module.exports = {};\nmodule.exports[  0] = module.exports[ 'Xx'] = {'symbol':  'Xx', 'name':       'unknown', 'mass':   1.00000000, 'radius':  1.0000, 'color': [1.000, 0.078, 0.576], 'number': 0};\nmodule.exports[  1] = module.exports[  'H'] = {'symbol':   'H', 'name':      'hydrogen', 'mass':   1.00794000, 'radius':  0.3100, 'color': [1.000, 1.000, 1.000], 'number': 1};\nmodule.exports[  2] = module.exports[ 'He'] = {'symbol':  'He', 'name':        'helium', 'mass':   4.00260200, 'radius':  0.2800, 'color': [0.851, 1.000, 1.000], 'number': 2};\nmodule.exports[  3] = module.exports[ 'Li'] = {'symbol':  'Li', 'name':       'lithium', 'mass':   6.94100000, 'radius':  1.2800, 'color': [0.800, 0.502, 1.000], 'number': 3};\nmodule.exports[  4] = module.exports[ 'Be'] = {'symbol':  'Be', 'name':     'beryllium', 'mass':   9.01218200, 'radius':  0.9600, 'color': [0.761, 1.000, 0.000], 'number': 4};\nmodule.exports[  5] = module.exports[  'B'] = {'symbol':   'B', 'name':         'boron', 'mass':  10.81100000, 'radius':  0.8400, 'color': [1.000, 0.710, 0.710], 'number': 5};\nmodule.exports[  6] = module.exports[  'C'] = {'symbol':   'C', 'name':        'carbon', 'mass':  12.01070000, 'radius':  0.7300, 'color': [0.565, 0.565, 0.565], 'number': 6};\nmodule.exports[  7] = module.exports[  'N'] = {'symbol':   'N', 'name':      'nitrogen', 'mass':  14.00670000, 'radius':  0.7100, 'color': [0.188, 0.314, 0.973], 'number': 7};\nmodule.exports[  8] = module.exports[  'O'] = {'symbol':   'O', 'name':        'oxygen', 'mass':  15.99940000, 'radius':  0.6600, 'color': [1.000, 0.051, 0.051], 'number': 8};\nmodule.exports[  9] = module.exports[  'F'] = {'symbol':   'F', 'name':      'fluorine', 'mass':  18.99840320, 'radius':  0.5700, 'color': [0.565, 0.878, 0.314], 'number': 9};\nmodule.exports[ 10] = module.exports[ 'Ne'] = {'symbol':  'Ne', 'name':          'neon', 'mass':  20.17970000, 'radius':  0.5800, 'color': [0.702, 0.890, 0.961], 'number': 10};\nmodule.exports[ 11] = module.exports[ 'Na'] = {'symbol':  'Na', 'name':        'sodium', 'mass':  22.98976928, 'radius':  1.6600, 'color': [0.671, 0.361, 0.949], 'number': 11};\nmodule.exports[ 12] = module.exports[ 'Mg'] = {'symbol':  'Mg', 'name':     'magnesium', 'mass':  24.30500000, 'radius':  1.4100, 'color': [0.541, 1.000, 0.000], 'number': 12};\nmodule.exports[ 13] = module.exports[ 'Al'] = {'symbol':  'Al', 'name':      'aluminum', 'mass':  26.98153860, 'radius':  1.2100, 'color': [0.749, 0.651, 0.651], 'number': 13};\nmodule.exports[ 14] = module.exports[ 'Si'] = {'symbol':  'Si', 'name':       'silicon', 'mass':  28.08550000, 'radius':  1.1100, 'color': [0.941, 0.784, 0.627], 'number': 14};\nmodule.exports[ 15] = module.exports[  'P'] = {'symbol':   'P', 'name':    'phosphorus', 'mass':  30.97376200, 'radius':  1.0700, 'color': [1.000, 0.502, 0.000], 'number': 15};\nmodule.exports[ 16] = module.exports[  'S'] = {'symbol':   'S', 'name':        'sulfur', 'mass':  32.06500000, 'radius':  1.0500, 'color': [1.000, 1.000, 0.188], 'number': 16};\nmodule.exports[ 17] = module.exports[ 'Cl'] = {'symbol':  'Cl', 'name':      'chlorine', 'mass':  35.45300000, 'radius':  1.0200, 'color': [0.122, 0.941, 0.122], 'number': 17};\nmodule.exports[ 18] = module.exports[ 'Ar'] = {'symbol':  'Ar', 'name':         'argon', 'mass':  39.94800000, 'radius':  1.0600, 'color': [0.502, 0.820, 0.890], 'number': 18};\nmodule.exports[ 19] = module.exports[  'K'] = {'symbol':   'K', 'name':     'potassium', 'mass':  39.09830000, 'radius':  2.0300, 'color': [0.561, 0.251, 0.831], 'number': 19};\nmodule.exports[ 20] = module.exports[ 'Ca'] = {'symbol':  'Ca', 'name':       'calcium', 'mass':  40.07800000, 'radius':  1.7600, 'color': [0.239, 1.000, 0.000], 'number': 20};\nmodule.exports[ 21] = module.exports[ 'Sc'] = {'symbol':  'Sc', 'name':      'scandium', 'mass':  44.95591200, 'radius':  1.7000, 'color': [0.902, 0.902, 0.902], 'number': 21};\nmodule.exports[ 22] = module.exports[ 'Ti'] = {'symbol':  'Ti', 'name':      'titanium', 'mass':  47.86700000, 'radius':  1.6000, 'color': [0.749, 0.761, 0.780], 'number': 22};\nmodule.exports[ 23] = module.exports[  'V'] = {'symbol':   'V', 'name':      'vanadium', 'mass':  50.94150000, 'radius':  1.5300, 'color': [0.651, 0.651, 0.671], 'number': 23};\nmodule.exports[ 24] = module.exports[ 'Cr'] = {'symbol':  'Cr', 'name':      'chromium', 'mass':  51.99610000, 'radius':  1.3900, 'color': [0.541, 0.600, 0.780], 'number': 24};\nmodule.exports[ 25] = module.exports[ 'Mn'] = {'symbol':  'Mn', 'name':     'manganese', 'mass':  54.93804500, 'radius':  1.3900, 'color': [0.611, 0.478, 0.780], 'number': 25};\nmodule.exports[ 26] = module.exports[ 'Fe'] = {'symbol':  'Fe', 'name':          'iron', 'mass':  55.84500000, 'radius':  1.3200, 'color': [0.878, 0.400, 0.200], 'number': 26};\nmodule.exports[ 27] = module.exports[ 'Co'] = {'symbol':  'Co', 'name':        'cobalt', 'mass':  58.69340000, 'radius':  1.2600, 'color': [0.941, 0.565, 0.627], 'number': 27};\nmodule.exports[ 28] = module.exports[ 'Ni'] = {'symbol':  'Ni', 'name':        'nickel', 'mass':  58.93319500, 'radius':  1.2400, 'color': [0.314, 0.816, 0.314], 'number': 28};\nmodule.exports[ 29] = module.exports[ 'Cu'] = {'symbol':  'Cu', 'name':        'copper', 'mass':  63.54600000, 'radius':  1.3200, 'color': [0.784, 0.502, 0.200], 'number': 29};\nmodule.exports[ 30] = module.exports[ 'Zn'] = {'symbol':  'Zn', 'name':          'zinc', 'mass':  65.38000000, 'radius':  1.2200, 'color': [0.490, 0.502, 0.690], 'number': 30};\nmodule.exports[ 31] = module.exports[ 'Ga'] = {'symbol':  'Ga', 'name':       'gallium', 'mass':  69.72300000, 'radius':  1.2200, 'color': [0.761, 0.561, 0.561], 'number': 31};\nmodule.exports[ 32] = module.exports[ 'Ge'] = {'symbol':  'Ge', 'name':     'germanium', 'mass':  72.64000000, 'radius':  1.2000, 'color': [0.400, 0.561, 0.561], 'number': 32};\nmodule.exports[ 33] = module.exports[ 'As'] = {'symbol':  'As', 'name':       'arsenic', 'mass':  74.92160000, 'radius':  1.1900, 'color': [0.741, 0.502, 0.890], 'number': 33};\nmodule.exports[ 34] = module.exports[ 'Se'] = {'symbol':  'Se', 'name':      'selenium', 'mass':  78.96000000, 'radius':  1.2000, 'color': [1.000, 0.631, 0.000], 'number': 34};\nmodule.exports[ 35] = module.exports[ 'Br'] = {'symbol':  'Br', 'name':       'bromine', 'mass':  79.90400000, 'radius':  1.2000, 'color': [0.651, 0.161, 0.161], 'number': 35};\nmodule.exports[ 36] = module.exports[ 'Kr'] = {'symbol':  'Kr', 'name':       'krypton', 'mass':  83.79800000, 'radius':  1.1600, 'color': [0.361, 0.722, 0.820], 'number': 36};\nmodule.exports[ 37] = module.exports[ 'Rb'] = {'symbol':  'Rb', 'name':      'rubidium', 'mass':  85.46780000, 'radius':  2.2000, 'color': [0.439, 0.180, 0.690], 'number': 37};\nmodule.exports[ 38] = module.exports[ 'Sr'] = {'symbol':  'Sr', 'name':     'strontium', 'mass':  87.62000000, 'radius':  1.9500, 'color': [0.000, 1.000, 0.000], 'number': 38};\nmodule.exports[ 39] = module.exports[  'Y'] = {'symbol':   'Y', 'name':       'yttrium', 'mass':  88.90585000, 'radius':  1.9000, 'color': [0.580, 1.000, 1.000], 'number': 39};\nmodule.exports[ 40] = module.exports[ 'Zr'] = {'symbol':  'Zr', 'name':     'zirconium', 'mass':  91.22400000, 'radius':  1.7500, 'color': [0.580, 0.878, 0.878], 'number': 40};\nmodule.exports[ 41] = module.exports[ 'Nb'] = {'symbol':  'Nb', 'name':       'niobium', 'mass':  92.90638000, 'radius':  1.6400, 'color': [0.451, 0.761, 0.788], 'number': 41};\nmodule.exports[ 42] = module.exports[ 'Mo'] = {'symbol':  'Mo', 'name':    'molybdenum', 'mass':  95.96000000, 'radius':  1.5400, 'color': [0.329, 0.710, 0.710], 'number': 42};\nmodule.exports[ 43] = module.exports[ 'Tc'] = {'symbol':  'Tc', 'name':    'technetium', 'mass':  98.00000000, 'radius':  1.4700, 'color': [0.231, 0.620, 0.620], 'number': 43};\nmodule.exports[ 44] = module.exports[ 'Ru'] = {'symbol':  'Ru', 'name':     'ruthenium', 'mass': 101.07000000, 'radius':  1.4600, 'color': [0.141, 0.561, 0.561], 'number': 44};\nmodule.exports[ 45] = module.exports[ 'Rh'] = {'symbol':  'Rh', 'name':       'rhodium', 'mass': 102.90550000, 'radius':  1.4200, 'color': [0.039, 0.490, 0.549], 'number': 45};\nmodule.exports[ 46] = module.exports[ 'Pd'] = {'symbol':  'Pd', 'name':     'palladium', 'mass': 106.42000000, 'radius':  1.3900, 'color': [0.000, 0.412, 0.522], 'number': 46};\nmodule.exports[ 47] = module.exports[ 'Ag'] = {'symbol':  'Ag', 'name':        'silver', 'mass': 107.86820000, 'radius':  1.4500, 'color': [0.753, 0.753, 0.753], 'number': 47};\nmodule.exports[ 48] = module.exports[ 'Cd'] = {'symbol':  'Cd', 'name':       'cadmium', 'mass': 112.41100000, 'radius':  1.4400, 'color': [1.000, 0.851, 0.561], 'number': 48};\nmodule.exports[ 49] = module.exports[ 'In'] = {'symbol':  'In', 'name':        'indium', 'mass': 114.81800000, 'radius':  1.4200, 'color': [0.651, 0.459, 0.451], 'number': 49};\nmodule.exports[ 50] = module.exports[ 'Sn'] = {'symbol':  'Sn', 'name':           'tin', 'mass': 118.71000000, 'radius':  1.3900, 'color': [0.400, 0.502, 0.502], 'number': 50};\nmodule.exports[ 51] = module.exports[ 'Sb'] = {'symbol':  'Sb', 'name':      'antimony', 'mass': 121.76000000, 'radius':  1.3900, 'color': [0.620, 0.388, 0.710], 'number': 51};\nmodule.exports[ 52] = module.exports[ 'Te'] = {'symbol':  'Te', 'name':     'tellurium', 'mass': 127.60000000, 'radius':  1.3800, 'color': [0.831, 0.478, 0.000], 'number': 52};\nmodule.exports[ 53] = module.exports[  'I'] = {'symbol':   'I', 'name':        'iodine', 'mass': 126.90470000, 'radius':  1.3900, 'color': [0.580, 0.000, 0.580], 'number': 53};\nmodule.exports[ 54] = module.exports[ 'Xe'] = {'symbol':  'Xe', 'name':         'xenon', 'mass': 131.29300000, 'radius':  1.4000, 'color': [0.259, 0.620, 0.690], 'number': 54};\nmodule.exports[ 55] = module.exports[ 'Cs'] = {'symbol':  'Cs', 'name':        'cesium', 'mass': 132.90545190, 'radius':  2.4400, 'color': [0.341, 0.090, 0.561], 'number': 55};\nmodule.exports[ 56] = module.exports[ 'Ba'] = {'symbol':  'Ba', 'name':        'barium', 'mass': 137.32700000, 'radius':  2.1500, 'color': [0.000, 0.788, 0.000], 'number': 56};\nmodule.exports[ 57] = module.exports[ 'La'] = {'symbol':  'La', 'name':     'lanthanum', 'mass': 138.90547000, 'radius':  2.0700, 'color': [0.439, 0.831, 1.000], 'number': 57};\nmodule.exports[ 58] = module.exports[ 'Ce'] = {'symbol':  'Ce', 'name':        'cerium', 'mass': 140.11600000, 'radius':  2.0400, 'color': [1.000, 1.000, 0.780], 'number': 58};\nmodule.exports[ 59] = module.exports[ 'Pr'] = {'symbol':  'Pr', 'name':  'praseodymium', 'mass': 140.90765000, 'radius':  2.0300, 'color': [0.851, 1.000, 0.780], 'number': 59};\nmodule.exports[ 60] = module.exports[ 'Nd'] = {'symbol':  'Nd', 'name':     'neodymium', 'mass': 144.24200000, 'radius':  2.0100, 'color': [0.780, 1.000, 0.780], 'number': 60};\nmodule.exports[ 61] = module.exports[ 'Pm'] = {'symbol':  'Pm', 'name':    'promethium', 'mass': 145.00000000, 'radius':  1.9900, 'color': [0.639, 1.000, 0.780], 'number': 61};\nmodule.exports[ 62] = module.exports[ 'Sm'] = {'symbol':  'Sm', 'name':      'samarium', 'mass': 150.36000000, 'radius':  1.9800, 'color': [0.561, 1.000, 0.780], 'number': 62};\nmodule.exports[ 63] = module.exports[ 'Eu'] = {'symbol':  'Eu', 'name':      'europium', 'mass': 151.96400000, 'radius':  1.9800, 'color': [0.380, 1.000, 0.780], 'number': 63};\nmodule.exports[ 64] = module.exports[ 'Gd'] = {'symbol':  'Gd', 'name':    'gadolinium', 'mass': 157.25000000, 'radius':  1.9600, 'color': [0.271, 1.000, 0.780], 'number': 64};\nmodule.exports[ 65] = module.exports[ 'Tb'] = {'symbol':  'Tb', 'name':       'terbium', 'mass': 158.92535000, 'radius':  1.9400, 'color': [0.189, 1.000, 0.780], 'number': 65};\nmodule.exports[ 66] = module.exports[ 'Dy'] = {'symbol':  'Dy', 'name':    'dysprosium', 'mass': 162.50000000, 'radius':  1.9200, 'color': [0.122, 1.000, 0.780], 'number': 66};\nmodule.exports[ 67] = module.exports[ 'Ho'] = {'symbol':  'Ho', 'name':       'holmium', 'mass': 164.93032000, 'radius':  1.9200, 'color': [0.000, 1.000, 0.612], 'number': 67};\nmodule.exports[ 68] = module.exports[ 'Er'] = {'symbol':  'Er', 'name':        'erbium', 'mass': 167.25900000, 'radius':  1.8900, 'color': [0.000, 0.902, 0.459], 'number': 68};\nmodule.exports[ 69] = module.exports[ 'Tm'] = {'symbol':  'Tm', 'name':       'thulium', 'mass': 168.93421000, 'radius':  1.9000, 'color': [0.000, 0.831, 0.322], 'number': 69};\nmodule.exports[ 70] = module.exports[ 'Yb'] = {'symbol':  'Yb', 'name':     'ytterbium', 'mass': 173.05400000, 'radius':  1.8700, 'color': [0.000, 0.749, 0.220], 'number': 70};\nmodule.exports[ 71] = module.exports[ 'Lu'] = {'symbol':  'Lu', 'name':      'lutetium', 'mass': 174.96680000, 'radius':  1.8700, 'color': [0.000, 0.671, 0.141], 'number': 71};\nmodule.exports[ 72] = module.exports[ 'Hf'] = {'symbol':  'Hf', 'name':       'hafnium', 'mass': 178.49000000, 'radius':  1.7500, 'color': [0.302, 0.761, 1.000], 'number': 72};\nmodule.exports[ 73] = module.exports[ 'Ta'] = {'symbol':  'Ta', 'name':      'tantalum', 'mass': 180.94788000, 'radius':  1.7000, 'color': [0.302, 0.651, 1.000], 'number': 73};\nmodule.exports[ 74] = module.exports[  'W'] = {'symbol':   'W', 'name':      'tungsten', 'mass': 183.84000000, 'radius':  1.6200, 'color': [0.129, 0.580, 0.839], 'number': 74};\nmodule.exports[ 75] = module.exports[ 'Re'] = {'symbol':  'Re', 'name':       'rhenium', 'mass': 186.20700000, 'radius':  1.5100, 'color': [0.149, 0.490, 0.671], 'number': 75};\nmodule.exports[ 76] = module.exports[ 'Os'] = {'symbol':  'Os', 'name':        'osmium', 'mass': 190.23000000, 'radius':  1.4400, 'color': [0.149, 0.400, 0.588], 'number': 76};\nmodule.exports[ 77] = module.exports[ 'Ir'] = {'symbol':  'Ir', 'name':       'iridium', 'mass': 192.21700000, 'radius':  1.4100, 'color': [0.090, 0.329, 0.529], 'number': 77};\nmodule.exports[ 78] = module.exports[ 'Pt'] = {'symbol':  'Pt', 'name':      'platinum', 'mass': 195.08400000, 'radius':  1.3600, 'color': [0.816, 0.816, 0.878], 'number': 78};\nmodule.exports[ 79] = module.exports[ 'Au'] = {'symbol':  'Au', 'name':          'gold', 'mass': 196.96656900, 'radius':  1.3600, 'color': [1.000, 0.820, 0.137], 'number': 79};\nmodule.exports[ 80] = module.exports[ 'Hg'] = {'symbol':  'Hg', 'name':       'mercury', 'mass': 200.59000000, 'radius':  1.3200, 'color': [0.722, 0.722, 0.816], 'number': 80};\nmodule.exports[ 81] = module.exports[ 'Tl'] = {'symbol':  'Tl', 'name':      'thallium', 'mass': 204.38330000, 'radius':  1.4500, 'color': [0.651, 0.329, 0.302], 'number': 81};\nmodule.exports[ 82] = module.exports[ 'Pb'] = {'symbol':  'Pb', 'name':          'lead', 'mass': 207.20000000, 'radius':  1.4600, 'color': [0.341, 0.349, 0.380], 'number': 82};\nmodule.exports[ 83] = module.exports[ 'Bi'] = {'symbol':  'Bi', 'name':       'bismuth', 'mass': 208.98040000, 'radius':  1.4800, 'color': [0.620, 0.310, 0.710], 'number': 83};\nmodule.exports[ 84] = module.exports[ 'Po'] = {'symbol':  'Po', 'name':      'polonium', 'mass': 210.00000000, 'radius':  1.4000, 'color': [0.671, 0.361, 0.000], 'number': 84};\nmodule.exports[ 85] = module.exports[ 'At'] = {'symbol':  'At', 'name':      'astatine', 'mass': 210.00000000, 'radius':  1.5000, 'color': [0.459, 0.310, 0.271], 'number': 85};\nmodule.exports[ 86] = module.exports[ 'Rn'] = {'symbol':  'Rn', 'name':         'radon', 'mass': 220.00000000, 'radius':  1.5000, 'color': [0.259, 0.510, 0.588], 'number': 86};\nmodule.exports[ 87] = module.exports[ 'Fr'] = {'symbol':  'Fr', 'name':      'francium', 'mass': 223.00000000, 'radius':  2.6000, 'color': [0.259, 0.000, 0.400], 'number': 87};\nmodule.exports[ 88] = module.exports[ 'Ra'] = {'symbol':  'Ra', 'name':        'radium', 'mass': 226.00000000, 'radius':  2.2100, 'color': [0.000, 0.490, 0.000], 'number': 88};\nmodule.exports[ 89] = module.exports[ 'Ac'] = {'symbol':  'Ac', 'name':      'actinium', 'mass': 227.00000000, 'radius':  2.1500, 'color': [0.439, 0.671, 0.980], 'number': 89};\nmodule.exports[ 90] = module.exports[ 'Th'] = {'symbol':  'Th', 'name':       'thorium', 'mass': 231.03588000, 'radius':  2.0600, 'color': [0.000, 0.729, 1.000], 'number': 90};\nmodule.exports[ 91] = module.exports[ 'Pa'] = {'symbol':  'Pa', 'name':  'protactinium', 'mass': 232.03806000, 'radius':  2.0000, 'color': [0.000, 0.631, 1.000], 'number': 91};\nmodule.exports[ 92] = module.exports[  'U'] = {'symbol':   'U', 'name':       'uranium', 'mass': 237.00000000, 'radius':  1.9600, 'color': [0.000, 0.561, 1.000], 'number': 92};\nmodule.exports[ 93] = module.exports[ 'Np'] = {'symbol':  'Np', 'name':     'neptunium', 'mass': 238.02891000, 'radius':  1.9000, 'color': [0.000, 0.502, 1.000], 'number': 93};\nmodule.exports[ 94] = module.exports[ 'Pu'] = {'symbol':  'Pu', 'name':     'plutonium', 'mass': 243.00000000, 'radius':  1.8700, 'color': [0.000, 0.420, 1.000], 'number': 94};\nmodule.exports[ 95] = module.exports[ 'Am'] = {'symbol':  'Am', 'name':     'americium', 'mass': 244.00000000, 'radius':  1.8000, 'color': [0.329, 0.361, 0.949], 'number': 95};\nmodule.exports[ 96] = module.exports[ 'Cm'] = {'symbol':  'Cm', 'name':        'curium', 'mass': 247.00000000, 'radius':  1.6900, 'color': [0.471, 0.361, 0.890], 'number': 96};\nmodule.exports[ 97] = module.exports[ 'Bk'] = {'symbol':  'Bk', 'name':     'berkelium', 'mass': 247.00000000, 'radius':  1.6600, 'color': [0.541, 0.310, 0.890], 'number': 97};\nmodule.exports[ 98] = module.exports[ 'Cf'] = {'symbol':  'Cf', 'name':   'californium', 'mass': 251.00000000, 'radius':  1.6800, 'color': [0.631, 0.212, 0.831], 'number': 98};\nmodule.exports[ 99] = module.exports[ 'Es'] = {'symbol':  'Es', 'name':   'einsteinium', 'mass': 252.00000000, 'radius':  1.6500, 'color': [0.702, 0.122, 0.831], 'number': 99};\nmodule.exports[100] = module.exports[ 'Fm'] = {'symbol':  'Fm', 'name':       'fermium', 'mass': 257.00000000, 'radius':  1.6700, 'color': [0.702, 0.122, 0.729], 'number': 100};\nmodule.exports[101] = module.exports[ 'Md'] = {'symbol':  'Md', 'name':   'mendelevium', 'mass': 258.00000000, 'radius':  1.7300, 'color': [0.702, 0.051, 0.651], 'number': 101};\nmodule.exports[102] = module.exports[ 'No'] = {'symbol':  'No', 'name':      'nobelium', 'mass': 259.00000000, 'radius':  1.7600, 'color': [0.741, 0.051, 0.529], 'number': 102};\nmodule.exports[103] = module.exports[ 'Lr'] = {'symbol':  'Lr', 'name':    'lawrencium', 'mass': 262.00000000, 'radius':  1.6100, 'color': [0.780, 0.000, 0.400], 'number': 103};\nmodule.exports[104] = module.exports[ 'Rf'] = {'symbol':  'Rf', 'name': 'rutherfordium', 'mass': 261.00000000, 'radius':  1.5700, 'color': [0.800, 0.000, 0.349], 'number': 104};\nmodule.exports[105] = module.exports[ 'Db'] = {'symbol':  'Db', 'name':       'dubnium', 'mass': 262.00000000, 'radius':  1.4900, 'color': [0.820, 0.000, 0.310], 'number': 105};\nmodule.exports[106] = module.exports[ 'Sg'] = {'symbol':  'Sg', 'name':    'seaborgium', 'mass': 266.00000000, 'radius':  1.4300, 'color': [0.851, 0.000, 0.271], 'number': 106};\nmodule.exports[107] = module.exports[ 'Bh'] = {'symbol':  'Bh', 'name':       'bohrium', 'mass': 264.00000000, 'radius':  1.4100, 'color': [0.878, 0.000, 0.220], 'number': 107};\nmodule.exports[108] = module.exports[ 'Hs'] = {'symbol':  'Hs', 'name':       'hassium', 'mass': 277.00000000, 'radius':  1.3400, 'color': [0.902, 0.000, 0.180], 'number': 108};\nmodule.exports[109] = module.exports[ 'Mt'] = {'symbol':  'Mt', 'name':    'meitnerium', 'mass': 268.00000000, 'radius':  1.2900, 'color': [0.922, 0.000, 0.149], 'number': 109};\nmodule.exports[110] = module.exports[ 'Ds'] = {'symbol':  'Ds', 'name':            'Ds', 'mass': 271.00000000, 'radius':  1.2800, 'color': [0.922, 0.000, 0.149], 'number': 110};\nmodule.exports[111] = module.exports['Uuu'] = {'symbol': 'Uuu', 'name':           'Uuu', 'mass': 272.00000000, 'radius':  1.2100, 'color': [0.922, 0.000, 0.149], 'number': 111};\nmodule.exports[112] = module.exports['Uub'] = {'symbol': 'Uub', 'name':           'Uub', 'mass': 285.00000000, 'radius':  1.2200, 'color': [0.922, 0.000, 0.149], 'number': 112};\nmodule.exports[113] = module.exports['Uut'] = {'symbol': 'Uut', 'name':           'Uut', 'mass': 284.00000000, 'radius':  1.3600, 'color': [0.922, 0.000, 0.149], 'number': 113};\nmodule.exports[114] = module.exports['Uuq'] = {'symbol': 'Uuq', 'name':           'Uuq', 'mass': 289.00000000, 'radius':  1.4300, 'color': [0.922, 0.000, 0.149], 'number': 114};\nmodule.exports[115] = module.exports['Uup'] = {'symbol': 'Uup', 'name':           'Uup', 'mass': 288.00000000, 'radius':  1.6200, 'color': [0.922, 0.000, 0.149], 'number': 115};\nmodule.exports[116] = module.exports['Uuh'] = {'symbol': 'Uuh', 'name':           'Uuh', 'mass': 292.00000000, 'radius':  1.7500, 'color': [0.922, 0.000, 0.149], 'number': 116};\nmodule.exports[117] = module.exports['Uus'] = {'symbol': 'Uus', 'name':           'Uus', 'mass': 294.00000000, 'radius':  1.6500, 'color': [0.922, 0.000, 0.149], 'number': 117};\nmodule.exports[118] = module.exports['Uuo'] = {'symbol': 'Uuo', 'name':           'Uuo', 'mass': 296.00000000, 'radius':  1.5700, 'color': [0.922, 0.000, 0.149], 'number': 118};\n// Adding Special atom type for the reference\nmodule.exports[119] = module.exports['Ref'] = {'symbol': 'Ref', 'name':           'Ref', 'mass': 1.00000000, 'radius':  0.2, 'color': [1, 1, 1], 'number': 119};\n","/* eslint-disable */\n/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.2.2\n */\n\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n\n(function(_global) {\n  \"use strict\";\n\n  var shim = {};\n  if (typeof(exports) === 'undefined') {\n    if(typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n      shim.exports = {};\n      define(function() {\n        return shim.exports;\n      });\n    } else {\n      // gl-matrix lives in a browser, define its namespaces in global\n      shim.exports = typeof(window) !== 'undefined' ? window : _global;\n    }\n  }\n  else {\n    // gl-matrix lives in commonjs, define its namespaces in exports\n    shim.exports = exports;\n  }\n\n  (function(exports) {\n    /* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation \n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n\nif(!GLMAT_EPSILON) {\n    var GLMAT_EPSILON = 0.000001;\n}\n\nif(!GLMAT_ARRAY_TYPE) {\n    var GLMAT_ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\n}\n\nif(!GLMAT_RANDOM) {\n    var GLMAT_RANDOM = Math.random;\n}\n\n/**\n * @class Common utilities\n * @name glMatrix\n */\nvar glMatrix = {};\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nglMatrix.setMatrixArrayType = function(type) {\n    GLMAT_ARRAY_TYPE = type;\n}\n\nif(typeof(exports) !== 'undefined') {\n    exports.glMatrix = glMatrix;\n}\n\nvar degree = Math.PI / 180;\n\n/**\n* Convert Degree To Radian\n*\n* @param {Number} Angle in Degrees\n*/\nglMatrix.toRadian = function(a){\n     return a * degree;\n}\n;\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation \n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * @class 2 Dimensional Vector\n * @name vec2\n */\n\nvar vec2 = {};\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nvec2.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(2);\n    out[0] = 0;\n    out[1] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nvec2.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(2);\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nvec2.fromValues = function(x, y) {\n    var out = new GLMAT_ARRAY_TYPE(2);\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nvec2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nvec2.set = function(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nvec2.sub = vec2.subtract;\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nvec2.mul = vec2.multiply;\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nvec2.div = vec2.divide;\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nvec2.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nvec2.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nvec2.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nvec2.dist = vec2.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec2.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nvec2.sqrDist = vec2.squaredDistance;\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec2.length = function (a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nvec2.len = vec2.length;\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec2.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nvec2.sqrLen = vec2.squaredLength;\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nvec2.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nvec2.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nvec2.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x*x + y*y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec2.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nvec2.cross = function(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0];\n    out[0] = out[1] = 0;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nvec2.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nvec2.random = function (out, scale) {\n    scale = scale || 1.0;\n    var r = GLMAT_RANDOM() * 2.0 * Math.PI;\n    out[0] = Math.cos(r) * scale;\n    out[1] = Math.sin(r) * scale;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2d = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat3 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat4 = function(out, a, m) {\n    var x = a[0], \n        y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec2.forEach = (function() {\n    var vec = vec2.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 2;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec2.str = function (a) {\n    return 'vec2(' + a[0] + ', ' + a[1] + ')';\n};\n\nif(typeof(exports) !== 'undefined') {\n    exports.vec2 = vec2;\n}\n;\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation \n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * @class 3 Dimensional Vector\n * @name vec3\n */\n\nvar vec3 = {};\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nvec3.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(3);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nvec3.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(3);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nvec3.fromValues = function(x, y, z) {\n    var out = new GLMAT_ARRAY_TYPE(3);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nvec3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nvec3.set = function(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nvec3.sub = vec3.subtract;\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nvec3.mul = vec3.multiply;\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nvec3.div = vec3.divide;\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    return out;\n};\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nvec3.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n};\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nvec3.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nvec3.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nvec3.dist = vec3.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec3.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nvec3.sqrDist = vec3.squaredDistance;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec3.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nvec3.len = vec3.length;\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec3.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nvec3.sqrLen = vec3.squaredLength;\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nvec3.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nvec3.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n};\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nvec3.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    var len = x*x + y*y + z*z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec3.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n};\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.cross = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nvec3.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    var r = GLMAT_RANDOM() * 2.0 * Math.PI;\n    var z = (GLMAT_RANDOM() * 2.0) - 1.0;\n    var zScale = Math.sqrt(1.0-z*z) * scale;\n\n    out[0] = Math.cos(r) * zScale;\n    out[1] = Math.sin(r) * zScale;\n    out[2] = z * scale;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2],\n        w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat3 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n};\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nvec3.transformQuat = function(out, a, q) {\n    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateX = function(out, a, b, c){\n   var p = [], r=[];\n\t  //Translate point to the origin\n\t  p[0] = a[0] - b[0];\n\t  p[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n\n\t  //perform rotation\n\t  r[0] = p[0];\n\t  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n\t  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n\t  //translate to correct position\n\t  out[0] = r[0] + b[0];\n\t  out[1] = r[1] + b[1];\n\t  out[2] = r[2] + b[2];\n\n  \treturn out;\n};\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateY = function(out, a, b, c){\n  \tvar p = [], r=[];\n  \t//Translate point to the origin\n  \tp[0] = a[0] - b[0];\n  \tp[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n  \n  \t//perform rotation\n  \tr[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  \tr[1] = p[1];\n  \tr[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n  \n  \t//translate to correct position\n  \tout[0] = r[0] + b[0];\n  \tout[1] = r[1] + b[1];\n  \tout[2] = r[2] + b[2];\n  \n  \treturn out;\n};\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateZ = function(out, a, b, c){\n  \tvar p = [], r=[];\n  \t//Translate point to the origin\n  \tp[0] = a[0] - b[0];\n  \tp[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n  \n  \t//perform rotation\n  \tr[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  \tr[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  \tr[2] = p[2];\n  \n  \t//translate to correct position\n  \tout[0] = r[0] + b[0];\n  \tout[1] = r[1] + b[1];\n  \tout[2] = r[2] + b[2];\n  \n  \treturn out;\n};\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec3.forEach = (function() {\n    var vec = vec3.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 3;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nvec3.angle = function(a, b) {\n   \n    var tempA = vec3.fromValues(a[0], a[1], a[2]);\n    var tempB = vec3.fromValues(b[0], b[1], b[2]);\n \n    vec3.normalize(tempA, tempA);\n    vec3.normalize(tempB, tempB);\n \n    var cosine = vec3.dot(tempA, tempB);\n\n    if(cosine > 1.0){\n        return 0;\n    } else {\n        return Math.acos(cosine);\n    }     \n};\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec3.str = function (a) {\n    return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n};\n\nif(typeof(exports) !== 'undefined') {\n    exports.vec3 = vec3;\n}\n;\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation \n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * @class 4 Dimensional Vector\n * @name vec4\n */\n\nvar vec4 = {};\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nvec4.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nvec4.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nvec4.fromValues = function(x, y, z, w) {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nvec4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nvec4.set = function(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nvec4.sub = vec4.subtract;\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    out[3] = a[3] * b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nvec4.mul = vec4.multiply;\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    out[3] = a[3] / b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nvec4.div = vec4.divide;\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    out[3] = Math.min(a[3], b[3]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    out[3] = Math.max(a[3], b[3]);\n    return out;\n};\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nvec4.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n};\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nvec4.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nvec4.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nvec4.dist = vec4.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec4.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nvec4.sqrDist = vec4.squaredDistance;\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec4.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nvec4.len = vec4.length;\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec4.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nvec4.sqrLen = vec4.squaredLength;\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nvec4.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = -a[3];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nvec4.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n};\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nvec4.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    var len = x*x + y*y + z*z + w*w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n        out[3] = a[3] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec4.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n};\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nvec4.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nvec4.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    //TODO: This is a pretty awful way of doing this. Find something better.\n    out[0] = GLMAT_RANDOM();\n    out[1] = GLMAT_RANDOM();\n    out[2] = GLMAT_RANDOM();\n    out[3] = GLMAT_RANDOM();\n    vec4.normalize(out, out);\n    vec4.scale(out, out, scale);\n    return out;\n};\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nvec4.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2], w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n};\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nvec4.transformQuat = function(out, a, q) {\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec4.forEach = (function() {\n    var vec = vec4.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 4;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec4.str = function (a) {\n    return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\nif(typeof(exports) !== 'undefined') {\n    exports.vec4 = vec4;\n}\n;\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation \n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * @class 2x2 Matrix\n * @name mat2\n */\n\nvar mat2 = {};\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nmat2.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a1 = a[1];\n        out[1] = a[2];\n        out[2] = a1;\n    } else {\n        out[0] = a[0];\n        out[1] = a[2];\n        out[2] = a[1];\n        out[3] = a[3];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\n        // Calculate the determinant\n        det = a0 * a3 - a2 * a1;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n    \n    out[0] =  a3 * det;\n    out[1] = -a1 * det;\n    out[2] = -a2 * det;\n    out[3] =  a0 * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.adjoint = function(out, a) {\n    // Caching this value is nessecary if out == a\n    var a0 = a[0];\n    out[0] =  a[3];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] =  a0;\n\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2.determinant = function (a) {\n    return a[0] * a[3] - a[2] * a[1];\n};\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    return out;\n};\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nmat2.mul = mat2.multiply;\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    return out;\n};\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nmat2.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    return out;\n};\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat2.str = function (a) {\n    return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n};\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix \n * @param {mat2} D the diagonal matrix \n * @param {mat2} U the upper triangular matrix \n * @param {mat2} a the input matrix to factorize\n */\n\nmat2.LDU = function (L, D, U, a) { \n    L[2] = a[2]/a[0]; \n    U[0] = a[0]; \n    U[1] = a[1]; \n    U[3] = a[3] - L[2] * U[1]; \n    return [L, D, U];       \n}; \n\nif(typeof(exports) !== 'undefined') {\n    exports.mat2 = mat2;\n}\n;\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation \n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * @class 2x3 Matrix\n * @name mat2d\n * \n * @description \n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\nvar mat2d = {};\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(6);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(6);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nmat2d.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.invert = function(out, a) {\n    var aa = a[0], ab = a[1], ac = a[2], ad = a[3],\n        atx = a[4], aty = a[5];\n\n    var det = aa * ad - ab * ac;\n    if(!det){\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = ad * det;\n    out[1] = -ab * det;\n    out[2] = -ac * det;\n    out[3] = aa * det;\n    out[4] = (ac * aty - ad * atx) * det;\n    out[5] = (ab * atx - aa * aty) * det;\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2d.determinant = function (a) {\n    return a[0] * a[3] - a[1] * a[2];\n};\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    out[4] = a0 * b4 + a2 * b5 + a4;\n    out[5] = a1 * b4 + a3 * b5 + a5;\n    return out;\n};\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nmat2d.mul = mat2d.multiply;\n\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nmat2d.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nmat2d.translate = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = a0 * v0 + a2 * v1 + a4;\n    out[5] = a1 * v0 + a3 * v1 + a5;\n    return out;\n};\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat2d.str = function (a) {\n    return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n                    a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2d.frob = function (a) { \n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}; \n\nif(typeof(exports) !== 'undefined') {\n    exports.mat2d = mat2d;\n}\n;\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation \n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * @class 3x3 Matrix\n * @name mat3\n */\n\nvar mat3 = {};\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(9);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nmat3.fromMat4 = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n};\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(9);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nmat3.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b01 = a22 * a11 - a12 * a21,\n        b11 = -a22 * a10 + a12 * a20,\n        b21 = a21 * a10 - a11 * a20,\n\n        // Calculate the determinant\n        det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    out[0] = (a11 * a22 - a12 * a21);\n    out[1] = (a02 * a21 - a01 * a22);\n    out[2] = (a01 * a12 - a02 * a11);\n    out[3] = (a12 * a20 - a10 * a22);\n    out[4] = (a00 * a22 - a02 * a20);\n    out[5] = (a02 * a10 - a00 * a12);\n    out[6] = (a10 * a21 - a11 * a20);\n    out[7] = (a01 * a20 - a00 * a21);\n    out[8] = (a00 * a11 - a01 * a10);\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nmat3.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n};\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b00 = b[0], b01 = b[1], b02 = b[2],\n        b10 = b[3], b11 = b[4], b12 = b[5],\n        b20 = b[6], b21 = b[7], b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n};\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nmat3.mul = mat3.multiply;\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nmat3.translate = function(out, a, v) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n        x = v[0], y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n};\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.rotate = function (out, a, rad) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nmat3.scale = function(out, a, v) {\n    var x = v[0], y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nmat3.fromMat2d = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = 0;\n\n    out[3] = a[2];\n    out[4] = a[3];\n    out[5] = 0;\n\n    out[6] = a[4];\n    out[7] = a[5];\n    out[8] = 1;\n    return out;\n};\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nmat3.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n};\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nmat3.normalFromMat4 = function (out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat3.str = function (a) {\n    return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n                    a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + \n                    a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat3.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n};\n\n\nif(typeof(exports) !== 'undefined') {\n    exports.mat3 = mat3;\n}\n;\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation \n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * @class 4x4 Matrix\n * @name mat4\n */\n\nvar mat4 = {};\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nmat4.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nmat4.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nmat4.mul = mat4.multiply;\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.translate = function (out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nmat4.scale = function(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Rotates a mat4 by the given angle\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.rotate = function (out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < GLMAT_EPSILON) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateX = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateY = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateZ = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslation = function (out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};\n\nmat4.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.frustum = function (out, left, right, bottom, top, near, far) {\n    var rl = 1 / (right - left),\n        tb = 1 / (top - bottom),\n        nf = 1 / (near - far);\n    out[0] = (near * 2) * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = (near * 2) * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (far * near * 2) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspective = function (out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.ortho = function (out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nmat4.lookAt = function (out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < GLMAT_EPSILON &&\n        Math.abs(eyey - centery) < GLMAT_EPSILON &&\n        Math.abs(eyez - centerz) < GLMAT_EPSILON) {\n        return mat4.identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat4.str = function (a) {\n    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + \n                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat4.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n};\n\n\nif(typeof(exports) !== 'undefined') {\n    exports.mat4 = mat4;\n}\n;\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation \n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * @class Quaternion\n * @name quat\n */\n\nvar quat = {};\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nquat.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nquat.rotationTo = (function() {\n    var tmpvec3 = vec3.create();\n    var xUnitVec3 = vec3.fromValues(1,0,0);\n    var yUnitVec3 = vec3.fromValues(0,1,0);\n\n    return function(out, a, b) {\n        var dot = vec3.dot(a, b);\n        if (dot < -0.999999) {\n            vec3.cross(tmpvec3, xUnitVec3, a);\n            if (vec3.length(tmpvec3) < 0.000001)\n                vec3.cross(tmpvec3, yUnitVec3, a);\n            vec3.normalize(tmpvec3, tmpvec3);\n            quat.setAxisAngle(out, tmpvec3, Math.PI);\n            return out;\n        } else if (dot > 0.999999) {\n            out[0] = 0;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            return out;\n        } else {\n            vec3.cross(tmpvec3, a, b);\n            out[0] = tmpvec3[0];\n            out[1] = tmpvec3[1];\n            out[2] = tmpvec3[2];\n            out[3] = 1 + dot;\n            return quat.normalize(out, out);\n        }\n    };\n})();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nquat.setAxes = (function() {\n    var matr = mat3.create();\n\n    return function(out, view, right, up) {\n        matr[0] = right[0];\n        matr[3] = right[1];\n        matr[6] = right[2];\n\n        matr[1] = up[0];\n        matr[4] = up[1];\n        matr[7] = up[2];\n\n        matr[2] = -view[0];\n        matr[5] = -view[1];\n        matr[8] = -view[2];\n\n        return quat.normalize(out, quat.fromMat3(out, matr));\n    };\n})();\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nquat.clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nquat.fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nquat.copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nquat.set = vec4.set;\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nquat.identity = function(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nquat.setAxisAngle = function(out, axis, rad) {\n    rad = rad * 0.5;\n    var s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n};\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nquat.add = vec4.add;\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nquat.multiply = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n};\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nquat.mul = quat.multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nquat.scale = vec4.scale;\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateX = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateY = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        by = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateZ = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bz = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n};\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nquat.calculateW = function (out, a) {\n    var x = a[0], y = a[1], z = a[2];\n\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n    return out;\n};\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nquat.dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nquat.lerp = vec4.lerp;\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nquat.slerp = function (out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    var        omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if ( cosom < 0.0 ) {\n        cosom = -cosom;\n        bx = - bx;\n        by = - by;\n        bz = - bz;\n        bw = - bw;\n    }\n    // calculate coefficients\n    if ( (1.0 - cosom) > 0.000001 ) {\n        // standard case (slerp)\n        omega  = Math.acos(cosom);\n        sinom  = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {        \n        // \"from\" and \"to\" quaternions are very close \n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n    \n    return out;\n};\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nquat.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        dot = a0*a0 + a1*a1 + a2*a2 + a3*a3,\n        invDot = dot ? 1.0/dot : 0;\n    \n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0*invDot;\n    out[1] = -a1*invDot;\n    out[2] = -a2*invDot;\n    out[3] = a3*invDot;\n    return out;\n};\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nquat.conjugate = function (out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n * @function\n */\nquat.length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nquat.len = quat.length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nquat.squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nquat.sqrLen = quat.squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nquat.normalize = vec4.normalize;\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nquat.fromMat3 = function(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    var fTrace = m[0] + m[4] + m[8];\n    var fRoot;\n\n    if ( fTrace > 0.0 ) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5/fRoot;  // 1/(4w)\n        out[0] = (m[5]-m[7])*fRoot;\n        out[1] = (m[6]-m[2])*fRoot;\n        out[2] = (m[1]-m[3])*fRoot;\n    } else {\n        // |w| <= 1/2\n        var i = 0;\n        if ( m[4] > m[0] )\n          i = 1;\n        if ( m[8] > m[i*3+i] )\n          i = 2;\n        var j = (i+1)%3;\n        var k = (i+2)%3;\n        \n        fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n        out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n        out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n    }\n    \n    return out;\n};\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nquat.str = function (a) {\n    return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\nif(typeof(exports) !== 'undefined') {\n    exports.quat = quat;\n}\n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n  })(shim.exports);\n})(this);\n","\"use strict\";\n\nvar _ = require('lodash');\nvar glm = require(\"./gl-matrix\");\nvar elements = require(\"./elements\");\nvar consts = require(\"./const\");\n\nfunction clamp(min, max, value) {\n    return Math.min(max, Math.max(min, value));\n}\n\n\nvar newView = module.exports.new = function() {\n    return {\n        aspect: 1.0,\n        zoom: 0.125,\n        translation: {\n            x: 0.0,\n            y: 0.0\n        },\n        atomScale: 0.6,\n        relativeAtomScale: 1.0,\n        bondScale: 0.5,\n        rotation: glm.mat4.create(),\n        ao: 0.75,\n        aoRes: 512,\n        brightness: 0.5,\n        outline: 0.0,\n        spf: 32,\n        bonds: false,\n        bondThreshold: 1.2,\n        bondShade: 0.5,\n        atomShade: 0.5,\n        resolution: {x:768,y:768},\n        dofStrength: 0.0,\n        dofPosition: 0.5,\n        fxaa: 1,\n        elements : _.cloneDeep(elements)\n    };\n};\n\n\nvar center = module.exports.center = function(v, system) {\n    var maxX = -Infinity;\n    var minX = Infinity;\n    var maxY = -Infinity;\n    var minY = Infinity;\n    for(var i = 0; i < system.atoms.length; i++) {\n        var a = system.atoms[i];\n        var r = v.elements[a.symbol].radius;\n        r = 2.5 * v.atomScale * (1 + (r - 1) * v.relativeAtomScale);\n        var p = glm.vec4.fromValues(a.x, a.y, a.z, 0);\n        glm.vec4.transformMat4(p, p, v.rotation);\n        maxX = Math.max(maxX, p[0] + r);\n        minX = Math.min(minX, p[0] - r);\n        maxY = Math.max(maxY, p[1] + r);\n        minY = Math.min(minY, p[1] - r);\n    }\n    var cx = minX + (maxX - minX) / 2.0;\n    var cy = minY + (maxY - minY) / 2.0;\n    let mres = Math.max(v.resolution.x,v.resolution.y)\n    //cx += (maxX - minX) * (1-v.resolution.x/mres);\n    //cy += (maxY - minY) * (1-v.resolution.y/mres);\n    cx += (maxX - minX) * (mres/v.resolution.x - 1)/2;\n    cy += (maxY - minY) * (mres/v.resolution.y - 1)/2;\n    v.translation.x = cx;\n    v.translation.y = cy;\n    var scale = Math.max((maxX - minX)*(mres/v.resolution.x), (maxY - minY)*(mres/v.resolution.y));\n    v.zoom = 1/(scale * 1.01);\n};\n\n\nvar override = module.exports.override = function(v, data) {\n    for (var key in data) {\n        v[key] = data[key];\n    }\n    resolve(v);\n};\n\n\nvar clone = module.exports.clone = function(v) {\n    return deserialize(serialize(v));\n};\n\n\nvar serialize = module.exports.serialize = function(v) {\n    return JSON.stringify(v);\n};\n\n\nvar deserialize = module.exports.deserialize = function(v) {\n    v = JSON.parse(v);\n    v.rotation = glm.mat4.clone(v.rotation);\n    return v;\n};\n\n\nvar resolve = module.exports.resolve = function(v) {\n    v.dofStrength = clamp(0, 1, v.dofStrength);\n    v.dofPosition = clamp(0, 1, v.dofPosition);\n    v.zoom = clamp(0.001, 2.0, v.zoom);\n    v.atomScale = clamp(0, 1, v.atomScale);\n    v.relativeAtomScale = clamp(0, 1, v.relativeAtomScale);\n    v.bondScale = clamp(0, 1, v.bondScale);\n    v.bondShade = clamp(0, 1, v.bondShade);\n    v.atomShade = clamp(0, 1, v.atomShade);\n    v.ao = clamp(0, 1, v.ao);\n    v.brightness = clamp(0, 1, v.brightness);\n    v.outline = clamp(0, 1, v.outline);\n};\n\n\nvar translate = module.exports.translate = function(v, dx, dy) {\n    v.translation.x -= dx/(v.resolution.x * v.zoom);\n    v.translation.y += dy/(v.resolution.y * v.zoom);\n    resolve(v);\n};\n\n\nvar rotate = module.exports.rotate = function(v, dx, dy) {\n    var m = glm.mat4.create();\n    glm.mat4.rotateY(m, m, dx * 0.005);\n    glm.mat4.rotateX(m, m, dy * 0.005);\n    glm.mat4.multiply(v.rotation, m, v.rotation);\n    const ao = v.ao;\n    v.ao = 0;\n    resolve(v);\n    v.ao = ao;\n};\n\nvar rotateX = module.exports.rotateX = function(v, dx) {\n    var m = glm.mat4.create();\n    glm.mat4.rotateX(m, m, dx);\n    v.rotation = m;\n    //glm.mat4.multiply(v.rotation, m, v.rotation);\n    const ao = v.ao;\n    v.ao = 0;\n    resolve(v);\n    v.ao = ao;\n};\n\nvar rotateY = module.exports.rotateY = function(v, dy) {\n    var m = glm.mat4.create();\n    glm.mat4.rotateY(m, m, dy);\n    v.rotation = m;\n    //glm.mat4.multiply(v.rotation, m, v.rotation);\n    const ao = v.ao;\n    v.ao = 0;\n    resolve(v);\n    v.ao = ao;\n};\n\nvar rotateZ = module.exports.rotateZ = function(v, dz) {\n    var m = glm.mat4.create();\n    glm.mat4.rotateZ(m, m, dz);\n    v.rotation = m;\n    //glm.mat4.multiply(v.rotation, m, v.rotation);\n    const ao = v.ao;\n    v.ao = 0;\n    resolve(v);\n    v.ao = ao;\n};\n\n\nvar getRect = module.exports.getRect = function(v) {\n    var width = 1.0/v.zoom;\n    var height = width/v.aspect;\n    var bottom = -height/2 + v.translation.y;\n    var top = height/2 + v.translation.y;\n    var left = -width/2 + v.translation.x;\n    var right = width/2 + v.translation.x;\n    return {\n        bottom: bottom,\n        top: top,\n        left: left,\n        right: right\n    };\n};\n\n\nvar getBondRadius = module.exports.getBondRadius = function(v) {\n    return v.bondScale * v.atomScale *\n        (1 + (consts.MIN_ATOM_RADIUS - 1) * v.relativeAtomScale);\n};\n","\"use strict\";\n\nvar elements = require(\"./elements\");\n\nvar MIN_ATOM_RADIUS = Infinity;\nvar MAX_ATOM_RADIUS = -Infinity;\nfor (var i = 0; i <= 118; i++) {\n    MIN_ATOM_RADIUS = Math.min(MIN_ATOM_RADIUS, elements[i].radius);\n    MAX_ATOM_RADIUS = Math.max(MAX_ATOM_RADIUS, elements[i].radius);\n}\n\nmodule.exports.MIN_ATOM_RADIUS = MIN_ATOM_RADIUS;\nmodule.exports.MAX_ATOM_RADIUS = MAX_ATOM_RADIUS;","\"use strict\";\n\nvar glm = require(\"./gl-matrix\")\n\nvar elements = require(\"./elements\");\nvar consts = require(\"./const\");\n\nvar newSystem = module.exports.new = function() {\n    return {\n        atoms: [],\n        farAtom: undefined,\n        bonds: []\n    }\n};\n\nvar addAtom = module.exports.addAtom = function(s, symbol, x, y, z) {\n    s.atoms.push({\n        symbol: symbol,\n        x: x,\n        y: y,\n        z: z,\n    });\n};\n\n// Our function to Add bonds explicitly [Not Finished]\nvar addBond = module.exports.addBond = function(s, idxA, idxB) {\n        var elems = elements;\n        var atom_a = s.atoms[idxA]\n        var atom_b = s.atoms[idxB]\n        var ea = elems[atom_a.symbol]\n        var eb = elems[atom_b.symbol]\n\n        var l = glm.vec3.fromValues(atom_a.x, atom_a.y, atom_a.z);\n        var m = glm.vec3.fromValues(atom_b.x, atom_b.y, atom_b.z);\n        var d = glm.vec3.distance(l, m);\n\n        s.bonds.push({\n                        begin : idxA,\n                        end: idxB,\n                        posA: {\n                            x: atom_a.x,\n                            y: atom_a.y,\n                            z: atom_a.z\n                        },\n                        posB: {\n                            x: atom_b.x,\n                            y: atom_b.y,\n                            z: atom_b.z\n                        },\n                        radA: ea.radius,\n                        radB: eb.radius,\n                        colA: {\n                            r: ea.color[0],\n                            g: ea.color[1],\n                            b: ea.color[2]\n                        },\n                        colB: {\n                            r: eb.color[0],\n                            g: eb.color[1],\n                            b: eb.color[2]\n                        },\n                       // cutoff: d/(ea.radius+eb.radius)\n                       cutoff: 0\n                    });\n};\n\nvar updateBondsColor = module.exports.updateBondsColor = function(s, v) {\n    var elems = elements;\n    if (v != undefined)\n       elems = v.elements;\n    for (var i = 0; i < s.bonds.length; i++) {\n        var atom_a = s.atoms[s.bonds[i].begin]\n        var atom_b = s.atoms[s.bonds[i].end]\n        var ea = elems[atom_a.symbol];\n        var eb = elems[atom_b.symbol];\n        s.bonds[i].colA = {\n                            r: ea.color[0],\n                            g: ea.color[1],\n                            b: ea.color[2]\n                        }\n        s.bonds[i].colB = {\n                            r: eb.color[0],\n                            g: eb.color[1],\n                            b: eb.color[2]\n                        }\n\n    };\n}\n\n//var calculateBonds = module.exports.calculateBonds = function(s, v) {\n//    var elems = elements;\n//    if (v != undefined)\n//        elems = v.elements;\n//    var bonds = [];\n//    var sorted = s.atoms.slice();\n//    sorted.sort(function(a, b) {\n//        return a.z - b.z;\n//    });\n//    for (var i = 0; i < sorted.length; i++) {\n//        var a = sorted[i];\n//        var j = i + 1;\n//        while(j < sorted.length && sorted[j].z < sorted[i].z + 2.5 * 2 * consts.MAX_ATOM_RADIUS) {\n//            var b = sorted[j];\n//            var l = glm.vec3.fromValues(a.x, a.y, a.z);\n//            var m = glm.vec3.fromValues(b.x, b.y, b.z);\n//            var d = glm.vec3.distance(l, m);\n//            var ea = elems[a.symbol];\n//            var eb = elems[b.symbol];\n//            if (d < 2.5*(ea.radius+eb.radius)) {\n//                bonds.push({\n//                    posA: {\n//                        x: a.x,\n//                        y: a.y,\n//                        z: a.z\n//                    },\n//                    posB: {\n//                        x: b.x,\n//                        y: b.y,\n//                        z: b.z\n//                    },\n//                    radA: ea.radius,\n//                    radB: eb.radius,\n//                    colA: {\n//                        r: ea.color[0],\n//                        g: ea.color[1],\n//                        b: ea.color[2]\n//                    },\n//                    colB: {\n//                        r: eb.color[0],\n//                        g: eb.color[1],\n//                        b: eb.color[2]\n//                    },\n//                    cutoff: d/(ea.radius+eb.radius)\n//                });\n//            }\n//            j++;\n//        }\n//    }\n//    bonds.sort(function(a, b) {\n//        return a.cutoff - b.cutoff;\n//    });\n//    s.bonds = bonds;\n//}\n\nvar getCentroid = module.exports.getCentroid = function(s) {\n    var xsum = 0;\n    var ysum = 0;\n    var zsum = 0;\n    for (var i = 0; i < s.atoms.length; i++) {\n        xsum += s.atoms[i].x;\n        ysum += s.atoms[i].y;\n        zsum += s.atoms[i].z;\n    }\n    return {\n        x: xsum/s.atoms.length,\n        y: ysum/s.atoms.length,\n        z: zsum/s.atoms.length\n    };\n};\n\nvar center = module.exports.center = function(s) {\n    var shift = getCentroid(s);\n    for (var i = 0; i < s.atoms.length; i++) {\n        var atom = s.atoms[i];\n        atom.x -= shift.x;\n        atom.y -= shift.y;\n        atom.z -= shift.z;\n    }\n}\n\nvar getFarAtom = module.exports.getFarAtom = function(s, v) {\n    if (s.farAtom !== undefined) {\n        return s.farAtom;\n    }\n    var elems = elements;\n    if (v != undefined)\n        elems = v.elements;\n\n    s.farAtom = s.atoms[0];\n    var maxd = 0.0;\n    for (var i = 0; i < s.atoms.length; i++) {\n        var atom = s.atoms[i];\n        var r = elems[atom.symbol].radius;\n        var rd = Math.sqrt(r*r + r*r + r*r) * 2.5;\n        var d = Math.sqrt(atom.x*atom.x + atom.y*atom.y + atom.z*atom.z) + rd;\n        if (d > maxd) {\n            maxd = d;\n            s.farAtom = atom;\n        }\n    }\n    return s.farAtom;\n}\n\nvar getRadius = module.exports.getRadius = function(s, v) {\n    var atom = getFarAtom(s, v);\n    var r = consts.MAX_ATOM_RADIUS;\n    var rd = Math.sqrt(r*r + r*r + r*r) * 2.5;\n    return Math.sqrt(atom.x*atom.x + atom.y*atom.y + atom.z*atom.z) + rd;\n}\n","import { Streamlit, RenderData } from \"streamlit-component-lib\"\n\nconst speckRenderer = require('./renderer.js');\nconst speckSystem = require('./system.js');\nconst speckView = require('./view.js');\nconst speckInteractions = require('./interactions.js');\nconst speckColors = require('./colors.js');\n\n\nlet system = speckSystem.new();\nlet view = speckView.new();\nview.resolution.x = 512;\nview.resolution.y = 512;\nview.bonds = true;\nview.atomScale = 0.24;\nview.relativeAtomScale = 0.64;\nview.bondScale = 0.5;\nview.brightness = 0.5;\nview.outline = 0.0;\nview.spf = 32;\nview.bondThreshold = 1.2;\nview.bondShade = 0.5;\nview.atomShade = 0.5;\nview.dofStrength = 0.0;\nview.dofPosition = 0.5;\n\nvar renderer: any = null;\nlet needReset = false;\nlet current_schema = \"speck_1\";\nvar view_position = \"front\";\n\n\nlet container = document.createElement(\"div\");\nlet canvas = document.createElement('canvas')\ncanvas.addEventListener('dblclick', function () {\n    center();\n});\nlet topbar = document.createElement('div')\ntopbar.style.top = \"0px\"\ntopbar.style.height = \"30px\"\ntopbar.style.right = \"0px\"\ntopbar.style.position = \"absolute\"\ntopbar.style.background = \"rgba(0, 0, 0, 0)\"\ntopbar.style.flexDirection = \"row\";\ntopbar.style.alignContent = \"flex-end\";\ntopbar.style.display = \"flex\";\n\n\n\nlet infoc = document.createElement(\"div\");\ninfoc.style.fontSize = \"10px\";\ninfoc.style.color = \"#AAA\";\n\n\n\nlet autoscale = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\nautoscale.setAttribute('width', \"16\");\nautoscale.setAttribute('height', \"16\");\nautoscale.setAttribute('viewBox', \"0 0 20 20\");\nautoscale.setAttribute('fill', \"#AAAAAA\");\nautoscale.setAttribute('stroke', \"#AAAAAA\");\n\nautoscale.addEventListener('mouseover', function () {\n    autoscale.setAttribute('stroke', \"#666666\");\n});\nautoscale.addEventListener('mouseout', function () {\n    autoscale.setAttribute('stroke', \"#AAAAAA\");\n});\nautoscale.innerHTML = '<g fill=\"none\" stroke-width=\"2\" fill-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(2 2)\"><path d=\"m16.5 5.5v-3c0-1.1045695-.8954305-2-2-2h-3\"/><path d=\"m8.5 10.5v-4\"/><path d=\"m6.5 8.5h4\"/><path d=\"m16.5 11.5v3c0 1.1045695-.8954305 2-2 2h-3m-6-16h-3c-1.1045695 0-2 .8954305-2 2v3m5 11h-3c-1.1045695 0-2-.8954305-2-2v-3\"/></g>'\n\nautoscale.addEventListener('click', function () {\n    center();\n});\n\nlet autoscalec = document.createElement(\"div\");\nautoscalec.style.padding = \"2px 0px 0px 0px\"\nautoscalec.append(autoscale)\n\nlet camera = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\ncamera.setAttribute('width', \"16\");\ncamera.setAttribute('height', \"16\");\ncamera.setAttribute('viewBox', \"0 0 22 22\");\ncamera.setAttribute('fill', \"#AAAAAA\");\ncamera.addEventListener('mouseover', function () {\n    camera.setAttribute('fill', \"#666666\");\n});\ncamera.addEventListener('mouseout', function () {\n    camera.setAttribute('fill', \"#AAAAAA\");\n});\ncamera.innerHTML = '<g><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8 4C8 3.44772 8.41328 3 8.92308 3H15.0769C15.5867 3 16 3.44772 16 4C16 4.55228 15.5867 5 15.0769 5H8.92308C8.41328 5 8 4.55228 8 4Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.77778 21H14.2222C17.3433 21 18.9038 21 20.0248 20.2777C20.51 19.965 20.9267 19.5632 21.251 19.0953C22 18.0143 22 16.5095 22 13.4999C22 10.4903 21.9998 8.9857 21.2508 7.90473C20.9266 7.43676 20.5099 7.03497 20.0246 6.72228C18.9036 6 17.3431 6 14.2221 6H9.77761C6.65659 6 5.09607 6 3.97508 6.72228C3.48979 7.03497 3.07312 7.43676 2.74886 7.90473C2 8.98547 2 10.4896 2 13.4979L2 13.4999C2 16.5095 2 18.0143 2.74902 19.0953C3.07328 19.5632 3.48995 19.965 3.97524 20.2777C5.09624 21 6.65675 21 9.77778 21ZM7.83333 13.4999C7.83333 11.2808 9.69881 9.48196 12 9.48196C14.3012 9.48196 16.1667 11.2808 16.1667 13.4999C16.1667 15.7189 14.3012 17.5178 12 17.5178C9.69881 17.5178 7.83333 15.7189 7.83333 13.4999ZM9.5 13.4999C9.5 12.1685 10.6193 11.0891 12 11.0891C13.3807 11.0891 14.5 12.1685 14.5 13.4999C14.5 14.8313 13.3807 15.9106 12 15.9106C10.6193 15.9106 9.5 14.8313 9.5 13.4999ZM18.1111 9.48196C17.6509 9.48196 17.2778 9.84174 17.2778 10.2855C17.2778 10.7294 17.6509 11.0891 18.1111 11.0891H18.6667C19.1269 11.0891 19.5 10.7294 19.5 10.2855C19.5 9.84174 19.1269 9.48196 18.6667 9.48196H18.1111Z\"/></g>'\n\ncamera.addEventListener('click', function () {\n    saveSnapshot();\n});\nlet camerac = document.createElement(\"div\");\ncamerac.style.padding = \"2px 2px 0px 0px\"\ncamerac.append(camera)\n\nlet palette = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\npalette.setAttribute('width', \"16\");\npalette.setAttribute('height', \"16\");\npalette.setAttribute('viewBox', \"0 0 16 16\");\npalette.setAttribute('fill', \"#AAAAAA\");\npalette.addEventListener('mouseover', function () {\n    palette.setAttribute('opacity', \"0.5\");\n});\npalette.addEventListener('mouseout', function () {\n    palette.setAttribute('opacity', \"1\");\n});\npalette.innerHTML = '<svg><path d=\"M10.5 10.5c.002 2.762-2.237 5-5 5s-5.002-2.238-5-5c-.002-2.76 2.237-5 5-5s5.002 2.24 5 5z\" color=\"#000000\" fill=\"#ff15a1\" stroke=\"#373737\" stroke-width=\".49999682600000006\"/><path d=\"M8 1.401a4.998 4.998 0 0 0-2.488 9.334c-.004-.078-.012-.155-.012-.234a4.998 4.998 0 0 1 7.488-4.334A4.994 4.994 0 0 0 8 1.4z\" fill=\"#1583ff\"/><path d=\"M10.5 5.5a4.998 4.998 0 0 0-5 5c0 .08.008.157.012.235A4.998 4.998 0 0 0 13 6.401c0-.079-.008-.156-.012-.234A4.975 4.975 0 0 0 10.5 5.5z\" fill=\"#00cf2d\"/><path d=\"M12.988 6.167c.004.078.012.155.012.234a4.998 4.998 0 0 1-7.489 4.334 4.994 4.994 0 0 0 4.989 4.766 4.998 4.998 0 0 0 2.488-9.334z\" fill=\"#f8ff15\"/><path d=\"M5.512 10.735a4.996 4.996 0 0 0 2.486 4.093 4.987 4.987 0 0 0 2.49-4.091A4.978 4.978 0 0 1 8 11.4a4.975 4.975 0 0 1-2.488-.666z\" fill=\"#ef0000\"/><path d=\"M7.998 6.173A4.991 4.991 0 0 0 5.5 10.5c0 .079.008.156.012.234a4.978 4.978 0 0 0 4.977.002c.003-.079.011-.157.011-.236a4.99 4.99 0 0 0-2.502-4.328z\" fill=\"#383027\"/><path d=\"M5.5 5.5c-.91 0-1.76.247-2.494.67a4.99 4.99 0 0 0 2.506 4.564c-.004-.077-.012-.154-.012-.233a4.991 4.991 0 0 1 2.498-4.328A4.975 4.975 0 0 0 5.5 5.5z\" fill=\"#5100cc\"/><path d=\"M8 1.401a4.998 4.998 0 0 0-4.994 4.77 4.998 4.998 0 1 0 4.992 8.658 4.998 4.998 0 1 0 4.99-8.662A4.994 4.994 0 0 0 8 1.4z\" fill=\"none\" stroke=\"#373737\" stroke-width=\".9999936520000001\"/></svg>'\n\npalette.addEventListener('click', function () {\n    switchColorSchema();\n});\nlet palettec = document.createElement(\"div\");\npalettec.style.padding = \"2px\"\npalettec.append(palette)\n\nlet front = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\nfront.setAttribute('width', \"20\");\nfront.setAttribute('height', \"20\");\nfront.setAttribute('viewBox', \"0 0 24 24\");\nfront.setAttribute('fill', \"#AAAAAA\");\nfront.setAttribute('stroke', \"#AAAAAA\");\nfront.addEventListener('mouseover', function () {\n    front.setAttribute('fill', \"#666666\");\n    front.setAttribute('stroke', \"#666666\");\n});\nfront.addEventListener('mouseout', function () {\n    front.setAttribute('fill', \"#AAAAAA\");\n    front.setAttribute('stroke', \"#AAAAAA\");\n});\nfront.innerHTML = '<svg stroke-width = \"0.5\"><path d=\"M11.2797426,15.9868494 L10.1464466,14.8535534 C9.95118446,14.6582912 9.95118446,14.3417088 10.1464466,14.1464466 C10.3417088,13.9511845 10.6582912,13.9511845 10.8535534,14.1464466 L12.8535534,16.1464466 C13.0488155,16.3417088 13.0488155,16.6582912 12.8535534,16.8535534 L10.8535534,18.8535534 C10.6582912,19.0488155 10.3417088,19.0488155 10.1464466,18.8535534 C9.95118446,18.6582912 9.95118446,18.3417088 10.1464466,18.1464466 L11.3044061,16.9884871 C10.3667147,16.9573314 9.46306739,16.8635462 8.61196501,16.7145167 C9.33747501,19.2936084 10.6229353,21 12,21 C14.0051086,21 15.8160018,17.3821896 15.9868494,12.7202574 L14.8535534,13.8535534 C14.6582912,14.0488155 14.3417088,14.0488155 14.1464466,13.8535534 C13.9511845,13.6582912 13.9511845,13.3417088 14.1464466,13.1464466 L16.1464466,11.1464466 C16.3417088,10.9511845 16.6582912,10.9511845 16.8535534,11.1464466 L18.8535534,13.1464466 C19.0488155,13.3417088 19.0488155,13.6582912 18.8535534,13.8535534 C18.6582912,14.0488155 18.3417088,14.0488155 18.1464466,13.8535534 L16.9884871,12.6955939 C16.8167229,17.8651676 14.7413901,22 12,22 C9.97580598,22 8.3147521,19.7456544 7.515026,16.484974 C4.2543456,15.6852479 2,14.024194 2,12 C2,9.97580598 4.2543456,8.3147521 7.515026,7.515026 C8.3147521,4.2543456 9.97580598,2 12,2 C13.5021775,2 14.8263891,3.23888365 15.7433738,5.30744582 C15.8552836,5.55989543 15.7413536,5.8552671 15.4889039,5.96717692 C15.2364543,6.07908673 14.9410827,5.96515672 14.8291729,5.71270711 C14.0550111,3.96632921 13.0221261,3 12,3 C10.6229353,3 9.33747501,4.70639159 8.61196501,7.28548333 C9.67174589,7.09991387 10.812997,7 12,7 C17.4892085,7 22,9.13669069 22,12 C22,13.5021775 20.7611164,14.8263891 18.6925542,15.7433738 C18.4401046,15.8552836 18.1447329,15.7413536 18.0328231,15.4889039 C17.9209133,15.2364543 18.0348433,14.9410827 18.2872929,14.8291729 C20.0336708,14.0550111 21,13.0221261 21,12 C21,9.89274656 17.0042017,8 12,8 C10.6991081,8 9.46636321,8.12791023 8.35424759,8.35424759 C8.12791023,9.46636321 8,10.6991081 8,12 C8,13.3008919 8.12791023,14.5336368 8.35424759,15.6457524 C9.25899447,15.8298862 10.2435788,15.9488767 11.2797426,15.9868494 Z M7.28548333,8.61196501 C4.70639159,9.33747501 3,10.6229353 3,12 C3,13.3770647 4.70639159,14.662525 7.28548333,15.388035 C7.09991387,14.3282541 7,13.187003 7,12 C7,10.812997 7.09991387,9.67174589 7.28548333,8.61196501 L7.28548333,8.61196501 Z\"/></svg>'\nfront.addEventListener('click', function () {\n      rotate();\n});\nlet frontc = document.createElement(\"div\");\nfrontc.style.padding = \"2px\"\nfrontc.append(front)\n\n\nlet sti = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\nsti.setAttribute('width', \"16\");\nsti.setAttribute('height', \"16\");\nsti.setAttribute('viewBox', \"0 0 16 16\");\nsti.setAttribute('fill', \"#AAAAAA\");\nsti.setAttribute('stroke', \"#AAAAAA\");\nsti.addEventListener('mouseover', function () {\n    sti.setAttribute('fill', \"#666666\");\n    sti.setAttribute('stroke', \"#666666\");\n});\nsti.addEventListener('mouseout', function () {\n    sti.setAttribute('fill', \"#AAAAAA\");\n    sti.setAttribute('stroke', \"#AAAAAA\");\n});\nsti.innerHTML = '<g><circle cx=\"4\" cy=\"4\" r=\"2\"/><circle cx=\"10\" cy=\"2\" r=\"1\"/><circle cx=\"10\" cy=\"12\" r=\"3\"/><path d=\"M 5 5 l 3 4 M 6 3 l 3 -1\" ></path></g>';\nsti.addEventListener('click', function () {\n    stickball();\n    updateModel()\n});\nlet stic = document.createElement(\"div\");\nstic.style.padding = \"2px\"\nstic.append(sti)\n\n\nlet lic = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\nlic.setAttribute('width', \"16\");\nlic.setAttribute('height', \"16\");\nlic.setAttribute('viewBox', \"0 0 16 16\");\nlic.setAttribute('fill', \"#AAAAAA\");\nlic.setAttribute('stroke', \"#AAAAAA\");\nlic.addEventListener('mouseover', function () {\n    lic.setAttribute('fill', \"#666666\");\n    lic.setAttribute('stroke', \"#666666\");\n});\nlic.addEventListener('mouseout', function () {\n    lic.setAttribute('fill', \"#AAAAAA\");\n    lic.setAttribute('stroke', \"#AAAAAA\");\n});\nlic.innerHTML = '<g><circle cx=\"4\" cy=\"4\" r=\"2\" fill=\"none\"/><circle cx=\"10\" cy=\"2\" r=\"1\" fill=\"none\"/><circle cx=\"10\" cy=\"12\" r=\"3\" fill=\"none\"/><path d=\"M 5 5 l 3 4 M 6 3 l 3 -1\" ></path></g>';\nlic.addEventListener('click', function () {\n    licorice()\n    updateModel();\n});\nlet licc = document.createElement(\"div\");\nlicc.style.padding = \"2px\"\nlicc.append(lic)\n\nlet fil = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\nfil.setAttribute('width', \"16\");\nfil.setAttribute('height', \"16\");\nfil.setAttribute('viewBox', \"0 0 16 16\");\nfil.setAttribute('fill', \"#AAAAAA\");\nfil.setAttribute('stroke', \"#AAAAAA\");\nfil.addEventListener('mouseover', function () {\n    fil.setAttribute('fill', \"#666666\");\n    fil.setAttribute('stroke', \"#666666\");\n});\nfil.addEventListener('mouseout', function () {\n    fil.setAttribute('fill', \"#AAAAAA\");\n    fil.setAttribute('stroke', \"#AAAAAA\");\n});\nfil.innerHTML = '<g><circle cx=\"4\" cy=\"4\" r=\"2\"/><circle cx=\"10\" cy=\"2\" r=\"1\"/><circle cx=\"10\" cy=\"12\" r=\"3\"/></g>';\nfil.addEventListener('click', function () {\n    fill();\n    updateModel();\n});\nlet filc = document.createElement(\"div\");\nfilc.style.padding = \"2px\"\nfilc.append(fil)\n\n\ncontainer.append(canvas)\n\n\ntopbar.append(stic)\ntopbar.append(licc)\ntopbar.append(filc)\n\ntopbar.append(frontc)\n\ntopbar.append(palettec)\ntopbar.append(camerac)\n\ntopbar.append(autoscalec)\n\ndocument.body.appendChild(topbar);\ndocument.body.appendChild(container);\n\ndocument.body.style.width = \"100%\"\ndocument.body.style.height = \"100%\"\n\nspeckInteractions({\n    container: container,\n    scrollZoom: true,\n    getRotation: function () { return view.rotation },\n    setRotation: function (t: any) { view.rotation = t },\n    getTranslation: function () { return view.translation },\n    setTranslation: function (t: any) { view.translation = t },\n    getZoom: function () { return view.zoom },\n    setZoom: function (t: any) { view.zoom = t },\n    refreshView: function () { needReset = true; }\n});\n\n\nlet saveSnapshot = function () {\n    renderer.render(view);\n    var imgURL = canvas.toDataURL(\"image/png\");\n    var a = document.createElement('a');\n    a.href = imgURL;\n    a.download = \"molecule.png\";\n    document.body.appendChild(a);\n    a.click();\n}\n\nlet setAtomsColor = function (atoms: any) {\n    for (const atom in atoms) {\n        if (atom in view.elements) {\n            view.elements[atom].color = atoms[atom];\n            needReset = true;\n        }\n    }\n    if (needReset) {\n        speckSystem.updateBondsColor(system, view);\n        renderer.setSystem(system, view);\n    }\n}\n\n\nlet setColorSchema = function (schema: string) {\n    if (schema in speckColors) {\n        current_schema = schema;\n        setAtomsColor(speckColors[schema]);\n    }\n}\n\nlet switchColorSchema = function () {\n    let update_color = false;\n    let first_color = \"\";\n    for (let color in speckColors) {\n        if (first_color === \"\")\n            first_color = color;\n        if (update_color) {\n            setColorSchema(color);\n            return;\n        }\n        if (color === current_schema) {\n            update_color = true;\n        }\n    }\n    setColorSchema(first_color);\n}\n\nlet stickball = function () {\n    needReset = true;\n    view.atomScale = 0.24;\n    view.relativeAtomScale = 1;\n    view.bondScale = 0.72;\n    view.bonds = true;\n    view.bondThreshold = 1.2;\n    view.brightness = 0.5;\n    view.outline = 0.0;\n    view.spf = 32;\n    view.bondShade = 0.5;\n    view.atomShade = 0.5;\n    view.dofStrength = 0.0;\n    view.dofPosition = 0.5;\n    view.ao = 0.75;\n    view.spf = 32;\n    view.outline = 0;\n}\n\n\nlet fill = function () {\n    stickball()\n    view.atomScale = 0.52;\n    view.relativeAtomScale = 1.0;\n}\n\nlet licorice = function () {\n    stickball()\n    view.ao = 0;\n    view.spf = 0;\n    view.outline = 0.5;\n    view.bonds = true;\n}\n\nlet updateModel = function () {\n    Streamlit.setComponentValue({\n        'bonds': view.bonds,\n        'atomScale': view.atomScale,\n        'relativeAtomScale': view.relativeAtomScale,\n        'bondScale': view.bondScale,\n        'brightness': view.brightness,\n        'outline': view.outline,\n        'spf': view.spf,\n        'bondShade': view.bondShade,\n        'atomShade': view.atomShade,\n        'dofStrength': view.dofStrength,\n        'dofPosition': view.dofPosition,\n        'ao': view.ao,\n        'aoRes': view.aoRes\n    })\n}\n\n// Our function to load bonds directly to the view from json\nlet loadStructureFromJson = function (json_data: any) {\n    system = undefined;\n    system = speckSystem.new();\n    var atoms = json_data.atoms\n    var bonds = json_data.bonds\n    for (var i = 0; i < atoms.length; i++) {\n            speckSystem.addAtom(system, atoms[i].symbol, atoms[i].x, atoms[i].y, atoms[i].z);\n        }\n        center();\n    for (var j = 0; j < bonds.length; j++) {\n            var idxA = bonds[j].begin_atom;\n            var idxB = bonds[j].end_atom;\n            speckSystem.addBond(system, idxA, idxB);\n        }\n        center();\n   }\n\n\nlet center = function () {\n    if (system) {\n        speckSystem.center(system);\n        renderer.setSystem(system, view);\n        speckView.center(view, system);\n        needReset = true;\n    }\n}\n\n\nlet rotate = function () {\n      if (system) {\n        if (view_position === 'front') {\n        speckView.rotateX(view, Math.PI / 2);\n        center();\n        view_position = 'top';\n        return\n        };\n        if (view_position === 'top') {\n        speckView.rotateY(view, -Math.PI / 2);\n        center();\n        view_position = 'right';\n        return\n        };\n        if (view_position === 'right') {\n        speckView.rotateX(view, 0);\n        center();\n        view_position = 'front';\n        return\n        }\n    }\n}\n\n\nlet reflow = function () {\n    var ww = document.body.clientWidth;\n    var wh = document.body.clientHeight;\n    if (ww === 0)\n        ww = view.resolution.x;\n    if (wh === 0)\n        wh = view.resolution.y;\n    if (view.resolution.x === ww && view.resolution.y === wh)\n        return;\n    container.style.height = wh + \"px\";\n    container.style.width = ww + \"px\";\n    container.style.left = 0 + \"px\";\n    container.style.top = 0 + \"px\";\n    view.resolution.x = ww;\n    view.resolution.y = wh;\n    renderer = new speckRenderer(canvas, view.resolution, view.aoRes);\n}\n\nlet loop = function () {\n    if (needReset) {\n        renderer.reset();\n        needReset = false;\n    }\n    renderer.render(view);\n    requestAnimationFrame(function () { loop() });\n}\n\n/**\n * The component's render function. This will be called immediately after\n * the component is initially loaded, and then again every time the\n * component gets new data from Python.\n */\nfunction onRender(event: Event): void {\n    // Get the RenderData from the event\n    const data = (event as CustomEvent<RenderData>).detail\n    console.log(data.args);\n    document.body.style.width = data.args[\"width\"]\n    document.body.style.height = data.args[\"height\"]\n    view.bonds = data.args['bonds'];\n    view.atomScale = data.args['atomScale'];\n    view.relativeAtomScale = data.args['relativeAtomScale'];\n    view.bondScale = data.args['bondScale'];\n    view.brightness = data.args['brightness'];\n    view.outline = data.args['outline'];\n    view.spf = data.args['spf'];\n    view.bondShade = data.args['bondShade'];\n    view.atomShade = data.args['atomShade'];\n    view.dofStrength = data.args['dofStrength'];\n    view.dofPosition = data.args['dofPosition'];\n    view.ao = data.args['ao'];\n    view.aoRes = data.args['aoRes'];\n    reflow()\n    loop();\n    loadStructureFromJson(data.args[\"data\"]);\n    setColorSchema(current_schema);\n\n    // We tell Streamlit to update our frameHeight after each render event, in\n    // case it has changed. (This isn't strictly necessary for the example\n    // because our height stays fixed, but this is a low-cost function, so\n    // there's no harm in doing it redundantly.)\n    Streamlit.setFrameHeight()\n}\n\n// Attach our `onRender` handler to Streamlit's render event.\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender)\n\n// Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\nStreamlit.setComponentReady()\n\n// Finally, tell Streamlit to update our initial height. We omit the\n// `height` parameter here to have it default to our scrollHeight.\nStreamlit.setFrameHeight()\n\n","\"use strict\";\n\nvar glm = require('./gl-matrix');\nvar webgl = require('./webgl.js');\nvar cube = require(\"./cube\");\nvar elements = require(\"./elements\");\nvar View = require(\"./view\");\nvar System = require(\"./system\");\nvar shaders = require(\"./shaders\");\n\nmodule.exports = function (canvas, resolution, aoResolution) {\n        let m_resolution = Math.max(resolution.x, resolution.y)\n        var self = this;\n\n        var range,\n            samples,\n            system;\n\n        var gl,\n            canvas;\n\n        var rAtoms = null,\n            rBonds = null,\n            rDispQuad = null,\n            rAccumulator = null,\n            rAO = null,\n            rDOF = null,\n            rFXAA = null;\n\n        var tSceneColor, tSceneNormal, tSceneDepth,\n            tRandRotDepth, tRandRotColor,\n            tAccumulator, tAccumulatorOut,\n            tFXAA, tFXAAOut,\n            tDOF,\n            tAO;\n\n        var fbSceneColor, fbSceneNormal,\n            fbRandRot,\n            fbAccumulator,\n            fbFXAA,\n            fbDOF,\n            fbAO;\n\n        var progAtoms,\n            progBonds,\n            progAccumulator,\n            progAO,\n            progFXAA,\n            progDOF,\n            progDisplayQuad;\n\n        var ext;\n\n        var sampleCount = 0,\n            colorRendered = false,\n            normalRendered = false;\n\n        self.getAOProgress = function() {\n            return sampleCount/1024;\n        }\n\n        self.initialize = function() {\n\n            // Initialize canvas/gl.\n            canvas.width = resolution.x;\n            canvas.height = resolution.y;\n            gl = canvas.getContext('webgl');\n            gl.enable(gl.DEPTH_TEST);\n            gl.enable(gl.CULL_FACE);\n            gl.clearColor(0,0,0,0);\n            gl.clearDepth(1);\n            gl.viewport(0,0,m_resolution,m_resolution);\n\n            window.gl = gl; //debug\n\n            ext = webgl.getExtensions(gl, [\n                \"EXT_frag_depth\",\n                \"WEBGL_depth_texture\",\n            ]);\n\n            self.createTextures();\n\n            // Initialize shaders.\n            progAtoms = loadProgram(gl, shaders.shaders['atom']);\n            progBonds = loadProgram(gl, shaders.shaders['bond']);\n            progDisplayQuad = loadProgram(gl, shaders.shaders['textured-quad']);\n            progAccumulator = loadProgram(gl, shaders.shaders['accumulator']);\n            progAO = loadProgram(gl, shaders.shaders['ao']);\n            progFXAA = loadProgram(gl, shaders.shaders['fxaa']);\n            progDOF = loadProgram(gl, shaders.shaders['dof']);\n\n            var position = [\n                -1, -1, 0,\n                 1, -1, 0,\n                 1,  1, 0,\n                -1, -1, 0,\n                 1,  1, 0,\n                -1,  1, 0\n            ];\n\n            // Initialize geometry.\n            var attribs = webgl.buildAttribs(gl, {aPosition: 3});\n            attribs.aPosition.buffer.set(new Float32Array(position));\n            var count = position.length / 9;\n\n            rDispQuad = new webgl.Renderable(gl, progDisplayQuad, attribs, count);\n            rAccumulator = new webgl.Renderable(gl, progAccumulator, attribs, count);\n            rAO = new webgl.Renderable(gl, progAO, attribs, count);\n            rFXAA = new webgl.Renderable(gl, progFXAA, attribs, count);\n            rDOF = new webgl.Renderable(gl, progDOF, attribs, count);\n\n            samples = 0;\n\n        }\n\n        self.createTextures = function() {\n            // fbRandRot\n            tRandRotColor = new webgl.Texture(gl, 0, null, aoResolution, aoResolution);\n\n            tRandRotDepth = new webgl.Texture(gl, 1, null, aoResolution, aoResolution, {\n                internalFormat: gl.DEPTH_COMPONENT,\n                format: gl.DEPTH_COMPONENT,\n                type: gl.UNSIGNED_SHORT\n            });\n\n            fbRandRot = new webgl.Framebuffer(gl, [tRandRotColor], tRandRotDepth);\n\n            // fbScene\n            tSceneColor = new webgl.Texture(gl, 2, null, m_resolution, m_resolution);\n\n            tSceneNormal = new webgl.Texture(gl, 3, null, m_resolution, m_resolution);\n\n            tSceneDepth = new webgl.Texture(gl, 4, null, m_resolution, m_resolution, {\n                internalFormat: gl.DEPTH_COMPONENT,\n                format: gl.DEPTH_COMPONENT,\n                type: gl.UNSIGNED_SHORT\n            });\n\n            fbSceneColor = new webgl.Framebuffer(gl, [tSceneColor], tSceneDepth);\n\n            fbSceneNormal = new webgl.Framebuffer(gl, [tSceneNormal], tSceneDepth);\n\n            // fbAccumulator\n            tAccumulator = new webgl.Texture(gl, 5, null, m_resolution, m_resolution);\n            tAccumulatorOut = new webgl.Texture(gl, 6, null, m_resolution, m_resolution);\n            fbAccumulator = new webgl.Framebuffer(gl, [tAccumulatorOut]);\n\n            // fbAO\n            tAO = new webgl.Texture(gl, 7, null, m_resolution, m_resolution);\n            fbAO = new webgl.Framebuffer(gl, [tAO]);\n\n            // fbFXAA\n            tFXAA = new webgl.Texture(gl, 8, null, m_resolution, m_resolution);\n            tFXAAOut = new webgl.Texture(gl, 9, null, m_resolution, m_resolution);\n            fbFXAA = new webgl.Framebuffer(gl, [tFXAAOut]);\n\n            // fbDOF\n            tDOF = new webgl.Texture(gl, 10, null, m_resolution, m_resolution);\n            fbDOF = new webgl.Framebuffer(gl, [tDOF]);\n        }\n\n        self.setResolution = function(res, aoRes) {\n            aoResolution = aoRes;\n            resolution = res;\n            canvas.width = resolution.x;\n            canvas.height = resolution.y;\n            gl.viewport(0,0,m_resolution,m_resolution);\n            self.createTextures();\n        }\n\n\n        self.setSystem = function(newSystem, view) {\n\n            system = newSystem;\n\n            function make36(arr) {\n                var out = [];\n                for (var i = 0; i < 36; i++) {\n                    out.push.apply(out, arr);\n                }\n                return out;\n            }\n\n            // Atoms\n            var attribs = webgl.buildAttribs(gl, {\n                aImposter: 3, aPosition: 3, aRadius: 1, aColor: 3\n            });\n\n            var imposter = [];\n            var position = [];\n            var radius = [];\n            var color = [];\n\n            for (var i = 0; i < system.atoms.length; i++) {\n                imposter.push.apply(imposter, cube.position);\n                var a = system.atoms[i];\n                position.push.apply(position, make36([a.x, a.y, a.z]));\n                radius.push.apply(radius, make36([view.elements[a.symbol].radius]));\n                var c = view.elements[a.symbol].color;\n                color.push.apply(color, make36([c[0], c[1], c[2]]));\n            }\n\n            attribs.aImposter.buffer.set(new Float32Array(imposter));\n            attribs.aPosition.buffer.set(new Float32Array(position));\n            attribs.aRadius.buffer.set(new Float32Array(radius));\n            attribs.aColor.buffer.set(new Float32Array(color));\n\n            var count = imposter.length / 9;\n\n            rAtoms = new webgl.Renderable(gl, progAtoms, attribs, count);\n\n            // Bonds\n\n            if (view.bonds) {\n\n                rBonds = null;\n\n                if (system.bonds.length > 0) {\n\n                    var attribs = webgl.buildAttribs(gl, {\n                        aImposter: 3,\n                        aPosA: 3,\n                        aPosB: 3,\n                        aRadA: 1,\n                        aRadB: 1,\n                        aColA: 3,\n                        aColB: 3\n                    })\n\n                    var imposter = [];\n                    var posa = [];\n                    var posb = [];\n                    var rada = [];\n                    var radb = [];\n                    var cola = [];\n                    var colb = [];\n\n                    for (var i = 0; i < system.bonds.length; i++) {\n                        var b = system.bonds[i];\n                        if (b.cutoff > view.bondThreshold) break;\n                        imposter.push.apply(imposter, cube.position);\n                        posa.push.apply(posa, make36([b.posA.x, b.posA.y, b.posA.z]));\n                        posb.push.apply(posb, make36([b.posB.x, b.posB.y, b.posB.z]));\n                        rada.push.apply(rada, make36([b.radA]));\n                        radb.push.apply(radb, make36([b.radB]));\n                        cola.push.apply(cola, make36([b.colA.r, b.colA.g, b.colA.b]));\n                        colb.push.apply(colb, make36([b.colB.r, b.colB.g, b.colB.b]));\n                    }\n\n                    attribs.aImposter.buffer.set(new Float32Array(imposter));\n                    attribs.aPosA.buffer.set(new Float32Array(posa));\n                    attribs.aPosB.buffer.set(new Float32Array(posb));\n                    attribs.aRadA.buffer.set(new Float32Array(rada));\n                    attribs.aRadB.buffer.set(new Float32Array(radb));\n                    attribs.aColA.buffer.set(new Float32Array(cola));\n                    attribs.aColB.buffer.set(new Float32Array(colb));\n\n                    var count = imposter.length / 9;\n\n                    rBonds = new webgl.Renderable(gl, progBonds, attribs, count);\n\n                }\n\n            }\n\n        }\n\n        self.reset = function() {\n            sampleCount = 0;\n            colorRendered = false;\n            normalRendered = false;\n            tAccumulator.reset();\n            tAccumulatorOut.reset();\n        }\n\n        self.render = function(view) {\n            if (system === undefined) {\n                return;\n            }\n            if (rAtoms == null) {\n                return;\n            }\n\n            range = System.getRadius(system) * 2.0;\n\n            if (!colorRendered) {\n                color(view);\n            } else if (!normalRendered){\n                normal(view);\n            } else {\n                for (var i = 0; i < view.spf; i++) {\n                    if (sampleCount > 1024) {\n                        break;\n                    }\n                    sample(view);\n                    sampleCount++;\n                }\n            }\n            display(view);\n        }\n\n        function color(view) {\n            colorRendered = true;\n            gl.viewport(0, 0, m_resolution, m_resolution);\n            fbSceneColor.bind();\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n            var rect = View.getRect(view);\n            var projection = glm.mat4.create();\n            glm.mat4.ortho(projection, rect.left, rect.right, rect.bottom, rect.top, 0, range);\n            var viewMat = glm.mat4.create();\n            glm.mat4.lookAt(viewMat, [0, 0, 0], [0, 0, -1], [0, 1, 0]);\n            var model = glm.mat4.create();\n            glm.mat4.translate(model, model, [0, 0, -range/2]);\n            glm.mat4.multiply(model, model, view.rotation);\n            progAtoms.setUniform(\"uProjection\", \"Matrix4fv\", false, projection);\n            progAtoms.setUniform(\"uView\", \"Matrix4fv\", false, viewMat);\n            progAtoms.setUniform(\"uModel\", \"Matrix4fv\", false, model);\n            progAtoms.setUniform(\"uBottomLeft\", \"2fv\", [rect.left, rect.bottom]);\n            progAtoms.setUniform(\"uTopRight\", \"2fv\", [rect.right, rect.top]);\n            progAtoms.setUniform(\"uAtomScale\", \"1f\", 2.5 * view.atomScale);\n            progAtoms.setUniform(\"uRelativeAtomScale\", \"1f\", view.relativeAtomScale);\n            progAtoms.setUniform(\"uRes\", \"1f\", m_resolution);\n            progAtoms.setUniform(\"uDepth\", \"1f\", range);\n            progAtoms.setUniform(\"uMode\", \"1i\", 0);\n            progAtoms.setUniform(\"uAtomShade\", \"1f\", view.atomShade);\n            rAtoms.render();\n\n            if (view.bonds && rBonds != null) {\n                fbSceneColor.bind();\n                progBonds.setUniform(\"uProjection\", \"Matrix4fv\", false, projection);\n                progBonds.setUniform(\"uView\", \"Matrix4fv\", false, viewMat);\n                progBonds.setUniform(\"uModel\", \"Matrix4fv\", false, model);\n                progBonds.setUniform(\"uRotation\", \"Matrix4fv\", false, view.rotation);\n                progBonds.setUniform(\"uDepth\", \"1f\", range);\n                progBonds.setUniform(\"uBottomLeft\", \"2fv\", [rect.left, rect.bottom]);\n                progBonds.setUniform(\"uTopRight\", \"2fv\", [rect.right, rect.top]);\n                progBonds.setUniform(\"uRes\", \"1f\", m_resolution);\n                progBonds.setUniform(\"uBondRadius\", \"1f\", 2.5 * View.getBondRadius(view));\n                progBonds.setUniform(\"uBondShade\", \"1f\", view.bondShade);\n                progBonds.setUniform(\"uAtomScale\", \"1f\", 2.5 * view.atomScale);\n                progBonds.setUniform(\"uRelativeAtomScale\", \"1f\", view.relativeAtomScale);\n                progBonds.setUniform(\"uMode\", \"1i\", 0);\n                rBonds.render();\n            }\n        }\n\n\n        function normal(view) {\n            normalRendered = true;\n            gl.viewport(0, 0, m_resolution, m_resolution);\n            fbSceneNormal.bind();\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n            var rect = View.getRect(view);\n            var projection = glm.mat4.create();\n            glm.mat4.ortho(projection, rect.left, rect.right, rect.bottom, rect.top, 0, range);\n            var viewMat = glm.mat4.create();\n            glm.mat4.lookAt(viewMat, [0, 0, 0], [0, 0, -1], [0, 1, 0]);\n            var model = glm.mat4.create();\n            glm.mat4.translate(model, model, [0, 0, -range/2]);\n            glm.mat4.multiply(model, model, view.rotation);\n            progAtoms.setUniform(\"uProjection\", \"Matrix4fv\", false, projection);\n            progAtoms.setUniform(\"uView\", \"Matrix4fv\", false, viewMat);\n            progAtoms.setUniform(\"uModel\", \"Matrix4fv\", false, model);\n            progAtoms.setUniform(\"uBottomLeft\", \"2fv\", [rect.left, rect.bottom]);\n            progAtoms.setUniform(\"uTopRight\", \"2fv\", [rect.right, rect.top]);\n            progAtoms.setUniform(\"uAtomScale\", \"1f\", 2.5 * view.atomScale);\n            progAtoms.setUniform(\"uRelativeAtomScale\", \"1f\", view.relativeAtomScale);\n            progAtoms.setUniform(\"uRes\", \"1f\", m_resolution);\n            progAtoms.setUniform(\"uDepth\", \"1f\", range);\n            progAtoms.setUniform(\"uMode\", \"1i\", 1);\n            progAtoms.setUniform(\"uAtomShade\", \"1f\", view.atomShade);\n            rAtoms.render();\n\n            if (view.bonds && rBonds != null) {\n                fbSceneNormal.bind();\n                progBonds.setUniform(\"uProjection\", \"Matrix4fv\", false, projection);\n                progBonds.setUniform(\"uView\", \"Matrix4fv\", false, viewMat);\n                progBonds.setUniform(\"uModel\", \"Matrix4fv\", false, model);\n                progBonds.setUniform(\"uRotation\", \"Matrix4fv\", false, view.rotation);\n                progBonds.setUniform(\"uDepth\", \"1f\", range);\n                progBonds.setUniform(\"uBottomLeft\", \"2fv\", [rect.left, rect.bottom]);\n                progBonds.setUniform(\"uTopRight\", \"2fv\", [rect.right, rect.top]);\n                progBonds.setUniform(\"uRes\", \"1f\", m_resolution);\n                progBonds.setUniform(\"uBondRadius\", \"1f\", 2.5 * View.getBondRadius(view));\n                progBonds.setUniform(\"uBondShade\", \"1f\", view.bondShade);\n                progBonds.setUniform(\"uAtomScale\", \"1f\", 2.5 * view.atomScale);\n                progBonds.setUniform(\"uRelativeAtomScale\", \"1f\", view.relativeAtomScale);\n                progBonds.setUniform(\"uMode\", \"1i\", 1);\n                rBonds.render();\n            }\n        }\n\n\n        function sample(view) {\n            gl.viewport(0, 0, aoResolution, aoResolution);\n            var v = View.clone(view);\n            v.zoom = 1/range;\n            v.translation.x = 0;\n            v.translation.y = 0;\n            var rot = glm.mat4.create();\n            for (var i = 0; i < 3; i++) {\n                var axis = glm.vec3.random(glm.vec3.create(), 1.0);\n                glm.mat4.rotate(rot, rot, Math.random() * 10, axis);\n            }\n            v.rotation = glm.mat4.multiply(glm.mat4.create(), rot, v.rotation);\n            fbRandRot.bind()\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n            var rect = View.getRect(v);\n            var projection = glm.mat4.create();\n            glm.mat4.ortho(projection, rect.left, rect.right, rect.bottom, rect.top, 0, range);\n            var viewMat = glm.mat4.create();\n            glm.mat4.lookAt(viewMat, [0, 0, 0], [0, 0, -1], [0, 1, 0]);\n            var model = glm.mat4.create();\n            glm.mat4.translate(model, model, [0, 0, -range/2]);\n            glm.mat4.multiply(model, model, v.rotation);\n            progAtoms.setUniform(\"uProjection\", \"Matrix4fv\", false, projection);\n            progAtoms.setUniform(\"uView\", \"Matrix4fv\", false, viewMat);\n            progAtoms.setUniform(\"uModel\", \"Matrix4fv\", false, model);\n            progAtoms.setUniform(\"uBottomLeft\", \"2fv\", [rect.left, rect.bottom]);\n            progAtoms.setUniform(\"uTopRight\", \"2fv\", [rect.right, rect.top]);\n            progAtoms.setUniform(\"uAtomScale\", \"1f\", 2.5 * v.atomScale);\n            progAtoms.setUniform(\"uRelativeAtomScale\", \"1f\", view.relativeAtomScale);\n            progAtoms.setUniform(\"uRes\", \"1f\", aoResolution);\n            progAtoms.setUniform(\"uDepth\", \"1f\", range);\n            progAtoms.setUniform(\"uMode\", \"1i\", 0);\n            progAtoms.setUniform(\"uAtomShade\", \"1f\", view.atomShade);\n            rAtoms.render();\n\n            if (view.bonds && rBonds != null) {\n                progBonds.setUniform(\"uProjection\", \"Matrix4fv\", false, projection);\n                progBonds.setUniform(\"uView\", \"Matrix4fv\", false, viewMat);\n                progBonds.setUniform(\"uModel\", \"Matrix4fv\", false, model);\n                progBonds.setUniform(\"uRotation\", \"Matrix4fv\", false, v.rotation);\n                progBonds.setUniform(\"uDepth\", \"1f\", range);\n                progBonds.setUniform(\"uBottomLeft\", \"2fv\", [rect.left, rect.bottom]);\n                progBonds.setUniform(\"uTopRight\", \"2fv\", [rect.right, rect.top]);\n                progBonds.setUniform(\"uRes\", \"1f\", aoResolution);\n                progBonds.setUniform(\"uBondRadius\", \"1f\", 2.5 * View.getBondRadius(view));\n                progBonds.setUniform(\"uBondShade\", \"1f\", view.bondShade);\n                progBonds.setUniform(\"uAtomScale\", \"1f\", 2.5 * view.atomScale);\n                progBonds.setUniform(\"uRelativeAtomScale\", \"1f\", view.relativeAtomScale);\n                progBonds.setUniform(\"uMode\", \"1i\", 0);\n                rBonds.render();\n            }\n\n            gl.viewport(0, 0, m_resolution, m_resolution);\n            var sceneRect = View.getRect(view);\n            var rotRect = View.getRect(v);\n            var invRot = glm.mat4.invert(glm.mat4.create(), rot);\n            fbAccumulator.bind();\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n            progAccumulator.setUniform(\"uSceneDepth\", \"1i\", tSceneDepth.index);\n            progAccumulator.setUniform(\"uSceneNormal\", \"1i\", tSceneNormal.index);\n            progAccumulator.setUniform(\"uRandRotDepth\", \"1i\", tRandRotDepth.index);\n            progAccumulator.setUniform(\"uAccumulator\", \"1i\", tAccumulator.index);\n            progAccumulator.setUniform(\"uSceneBottomLeft\", \"2fv\", [sceneRect.left, sceneRect.bottom]);\n            progAccumulator.setUniform(\"uSceneTopRight\", \"2fv\", [sceneRect.right, sceneRect.top]);\n            progAccumulator.setUniform(\"uRotBottomLeft\", \"2fv\", [rotRect.left, rotRect.bottom]);\n            progAccumulator.setUniform(\"uRotTopRight\", \"2fv\", [rotRect.right, rotRect.top]);\n            progAccumulator.setUniform(\"uRes\", \"1f\", m_resolution);\n            progAccumulator.setUniform(\"uDepth\", \"1f\", range);\n            progAccumulator.setUniform(\"uRot\", \"Matrix4fv\", false, rot);\n            progAccumulator.setUniform(\"uInvRot\", \"Matrix4fv\", false, invRot);\n            progAccumulator.setUniform(\"uSampleCount\", \"1i\", sampleCount);\n            rAccumulator.render();\n            tAccumulator.activate();\n            tAccumulator.bind();\n            gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 0, 0, m_resolution, m_resolution, 0);\n        }\n\n        function display(view) {\n            gl.viewport(0, 0, m_resolution, m_resolution);\n            if (view.fxaa > 0 || view.dofStrength > 0) {\n                fbAO.bind();\n            } else {\n                gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n            progAO.setUniform(\"uSceneColor\", \"1i\", tSceneColor.index);\n            progAO.setUniform(\"uSceneDepth\", \"1i\", tSceneDepth.index);\n            progAO.setUniform(\"uAccumulatorOut\", \"1i\", tAccumulatorOut.index);\n            progAO.setUniform(\"uRes\", \"1f\", m_resolution);\n            progAO.setUniform(\"uAO\", \"1f\", 2.0 * view.ao);\n            progAO.setUniform(\"uBrightness\", \"1f\", 2.0 * view.brightness);\n            progAO.setUniform(\"uOutlineStrength\", \"1f\", view.outline);\n            rAO.render();\n\n            if (view.fxaa > 0) {\n                if (view.dofStrength > 0) {\n                    fbFXAA.bind();\n                } else {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n                }\n                for (var i = 0; i < view.fxaa; i++) {\n                    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n                    if (i == 0) {\n                        progFXAA.setUniform(\"uTexture\", \"1i\", tAO.index);\n                    } else {\n                        progFXAA.setUniform(\"uTexture\", \"1i\", tFXAA.index);\n                    }\n                    progFXAA.setUniform(\"uRes\", \"1f\", m_resolution);\n                    rFXAA.render();\n                    tFXAA.activate();\n                    tFXAA.bind();\n                    gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 0, 0, m_resolution, m_resolution, 0);\n                }\n            }\n\n            if (view.dofStrength > 0) {\n                gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n                gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n                if (view.fxaa > 0) {\n                    progDOF.setUniform(\"uColor\", \"1i\", tFXAA.index);\n                } else {\n                    progDOF.setUniform(\"uColor\", \"1i\", tAO.index);\n                }\n                progDOF.setUniform(\"uDepth\", \"1i\", tSceneDepth.index);\n                progDOF.setUniform(\"uDOFPosition\", \"1f\", view.dofPosition);\n                progDOF.setUniform(\"uDOFStrength\", \"1f\", view.dofStrength);\n                progDOF.setUniform(\"uRes\", \"1f\", m_resolution);\n                rDOF.render();\n            }\n\n\n            // gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            // gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n            // progDisplayQuad.setUniform(\"uTexture\", \"1i\", tSceneColor.index);\n            // progDisplayQuad.setUniform(\"uRes\", \"1f\", m_resolution);\n            // rDispQuad.render();\n        }\n\n        self.initialize();\n}\n\n\nfunction loadProgram(gl, src) {\n    src = src.split('// __split__');\n    return new webgl.Program(gl, src[0], src[1]);\n}\n","\n//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\nfunction buildAttribs(gl, layout) {\n    var attribs = {};\n    for (var key in layout) {\n        attribs[key] = {\n            buffer: new GLBuffer(gl),\n            size: layout[key]\n        }\n    }\n    return attribs;\n}\n\nmodule.exports.buildAttribs = buildAttribs;\n\n\n//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\nfunction getExtensions(gl, extArray) {\n    var ext = {};\n    for (var i = 0; i < extArray.length; i++) {\n        var e = gl.getExtension(extArray[i]);\n        if (e === null) {\n            throw \"Extension \" + extArray[i] + \" not available.\";\n        }\n        ext[extArray[i]] = e;\n    }\n    return ext;\n};\n\nmodule.exports.getExtensions = getExtensions;\n\n\n//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\nfunction Framebuffer(gl, color, depth, ext) {\n\n    var self = this;\n\n    self.initialize = function() {\n        self.fb = gl.createFramebuffer();\n        self.bind();\n        if (color.length > 1) {\n            var drawBuffers = [];\n            for (var i = 0; i < color.length; i++) {\n                drawBuffers.push(ext[\"COLOR_ATTACHMENT\" + i + \"_WEBGL\"]);\n            }\n            ext.drawBuffersWEBGL(drawBuffers);\n            for (var i = 0; i < color.length; i++) {\n                gl.framebufferTexture2D(gl.FRAMEBUFFER, ext[\"COLOR_ATTACHMENT\" + i + \"_WEBGL\"],\n                    gl.TEXTURE_2D, color[i].texture, 0);\n            }\n        } else {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, color[0].texture, 0);\n        }\n        if (depth !== undefined) {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depth.texture, 0);\n        }\n    };\n\n    self.bind = function() {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, self.fb);\n    }\n\n    self.initialize();\n\n};\n\nmodule.exports.Framebuffer = Framebuffer;\n\n\n//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\nfunction Texture(gl, index, data, width, height, options) {\n    options = options || {};\n    options.target = options.target || gl.TEXTURE_2D;\n    options.mag = options.mag || gl.NEAREST;\n    options.min = options.min || gl.NEAREST;\n    options.wraps = options.wraps || gl.CLAMP_TO_EDGE;\n    options.wrapt = options.wrapt || gl.CLAMP_TO_EDGE;\n    options.internalFormat = options.internalFormat || gl.RGBA;\n    options.format = options.format || gl.RGBA;\n    options.type = options.type || gl.UNSIGNED_BYTE;\n\n    var self = this;\n\n    self.initialize = function() {\n        self.index = index;\n        self.activate();\n        self.texture = gl.createTexture();\n        self.bind();\n        gl.texParameteri(options.target, gl.TEXTURE_MAG_FILTER, options.mag);\n        gl.texParameteri(options.target, gl.TEXTURE_MIN_FILTER, options.min);\n        gl.texParameteri(options.target, gl.TEXTURE_WRAP_S, options.wraps);\n        gl.texParameteri(options.target, gl.TEXTURE_WRAP_T, options.wrapt);\n        gl.texImage2D(options.target, 0, options.internalFormat, width, height, \n            0, options.format, options.type, data);\n    }\n\n    self.bind = function() {\n        gl.bindTexture(options.target, self.texture);\n    };\n\n    self.activate = function() {\n        gl.activeTexture(gl.TEXTURE0 + self.index);\n    };\n\n    self.reset = function() {\n        self.activate();\n        self.bind();\n        gl.texImage2D(options.target, 0, options.internalFormat, width, height, \n            0, options.format, options.type, data);\n    }\n\n    self.initialize();\n}\n\nmodule.exports.Texture = Texture;\n\n\n//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\nfunction GLBuffer(gl) {\n\n    var self = this;\n\n    self.initialize = function() {\n        self.buffer = gl.createBuffer();\n    }\n\n    self.bind = function() {\n        gl.bindBuffer(gl.ARRAY_BUFFER, self.buffer);\n    }\n\n    self.set = function(data) {\n        self.bind();\n        gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n    }\n\n    self.initialize();\n};\n\nmodule.exports.GLBuffer = GLBuffer;\n\n\n//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\nfunction Renderable(gl, program, buffers, primitiveCount) {\n\n    var self = this;\n\n    self.primitiveCount = primitiveCount;\n\n    self.initialize = function() {\n    }\n\n    self.render = function() {\n        program.use();\n        for (let name in buffers) {\n            var buffer = buffers[name].buffer;\n            var size = buffers[name].size;\n            try {\n                var location = program.attribs[name].location;\n            } catch (e) {\n                console.log(\"Could not find location for\", name);\n                throw e;\n            }\n            buffer.bind();\n            gl.enableVertexAttribArray(location);\n            gl.vertexAttribPointer(location, size, gl.FLOAT, false, 0, 0);\n        }\n        gl.drawArrays(gl.TRIANGLES, 0, 3 * primitiveCount);\n        for (let name in self.buffers) {\n            gl.disableVertexAttribArray(program.attributes[name].location);\n        }\n    }\n\n    self.initialize();\n};\n\nmodule.exports.Renderable = Renderable;\n\n\n//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\nfunction InstancedRenderable(gl, program, buffers, primitiveCount, instancedExt) {\n\n    var self = this;\n\n    self.initialize = function() {\n    }\n\n    self.render = function() {\n        program.use();\n        for (let name in buffers) {\n            var buffer = buffers[name].buffer;\n            var size = buffers[name].size;\n            try {\n                var location = program.attribs[name].location;\n            } catch (e) {\n                console.log(\"Could not find location for\", name);\n                throw e;\n            }\n            buffer.bind();\n            gl.enableVertexAttribArray(location);\n            gl.vertexAttribPointer(location, size, gl.FLOAT, false, 0, 0);\n            instancedExt.vertexAttribDivisorANGLE(location, buffers[name].divisor);                \n        }\n        instancedExt.drawArraysInstancedANGLE(gl.TRIANGLES, 0, 6*2*3, primitiveCount)\n        for (let name in self.buffers) {\n            gl.disableVertexAttribArray(program.attributes[name].location);\n        }\n    }\n\n    self.initialize();\n};\n\nmodule.exports.InstancedRenderable = InstancedRenderable;\n\n\n//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\nfunction Program(gl, vertexSource, fragmentSource) {\n\n    var self = this;\n\n    self.initialize = function() {\n        self.program = self.compileProgram(vertexSource, fragmentSource);\n        self.attribs = self.gatherAttribs();\n        self.uniforms = self.gatherUniforms();\n    }\n\n    self.use = function() {\n        gl.useProgram(self.program);\n    }\n\n    self.compileProgram = function(vertexSource, fragmentSource) {\n        var vertexShader = self.compileShader(vertexSource, gl.VERTEX_SHADER);\n        var fragmentShader = self.compileShader(fragmentSource, gl.FRAGMENT_SHADER);\n        var program = gl.createProgram();\n        gl.attachShader(program, vertexShader);\n        gl.attachShader(program, fragmentShader);\n        gl.linkProgram(program);\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            console.log(gl.getProgramInfoLog(program));\n            throw \"Failed to compile program.\";\n        }\n        return program;\n    }\n\n    self.compileShader = function(source, type) {\n        var shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            var err = gl.getShaderInfoLog(shader);\n            var lineno = parseInt(err.split(':')[2]);\n            var split = source.split(\"\\n\");\n            for (var i in split) {\n                var q = parseInt(i);\n                console.log(q + \"  \" + split[i]);\n                if (i == lineno - 1) {\n                    console.warn(err);\n                }\n            }\n            let typeString = type == gl.VERTEX_SHADER ? \"vertex\" : \"fragment\";\n            throw \"Failed to compile \" + typeString + \" shader.\";\n        }\n        return shader;\n    }\n\n    self.setUniform = function(name, type, value) {\n        var args = Array.prototype.slice.call(arguments, 2);\n        self.use(); // Make this idempotent. At the context level, perhaps?\n        try {\n            var location = self.uniforms[name].location;\n        }\n        catch(e) {\n            console.log(name);\n            throw e;\n        }\n        gl['uniform' + type].apply(gl, [location].concat(args));\n    }\n\n    self.gatherUniforms = function() {\n        var uniforms = {};\n        var nUniforms = gl.getProgramParameter(self.program, gl.ACTIVE_UNIFORMS);\n        for (var i = 0; i < nUniforms; i++) {\n            var uniform = gl.getActiveUniform(self.program, i);\n            uniforms[uniform.name] = {\n                name: uniform.name,\n                location: gl.getUniformLocation(self.program, uniform.name),\n                type: uniform.type,\n                size: uniform.size\n            };\n        }\n        return uniforms;\n    }\n\n    self.gatherAttribs = function() {\n        var attribs = {};\n        var nAttribs = gl.getProgramParameter(self.program, gl.ACTIVE_ATTRIBUTES);\n        for (var i = 0; i < nAttribs; i++) {\n            var attrib = gl.getActiveAttrib(self.program, i);\n            attribs[attrib.name] = {\n                name: attrib.name,\n                location: gl.getAttribLocation(self.program, attrib.name),\n                type: attrib.type,\n                size: attrib.size\n            };\n        }\n        return attribs;\n    }   \n\n//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n    self.initialize();\n\n};\n\n//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\nmodule.exports.Program = Program;\n","\nvar n = -1;\nvar p = 1;\n\nmodule.exports = {\n\n\tposition: [\n\n\t\t// -X\n\t\tn, n, n,\n\t\tn, n, p,\n\t\tn, p, p,\n\t\tn, n, n,\n\t\tn, p, p,\n\t\tn, p, n,\n\n\t\t// +X\n\t\tp, n, p,\n\t\tp, n, n,\n\t\tp, p, n,\n\t\tp, n, p,\n\t\tp, p, n,\n\t\tp, p, p,\n\n\t\t// -Y\n\t\tn, n, n,\n\t\tp, n, n,\n\t\tp, n, p,\n\t\tn, n, n,\n\t\tp, n, p,\n\t\tn, n, p,\n\n\t\t// +Y\n\t\tn, p, p,\n\t\tp, p, p,\n\t\tp, p, n,\n\t\tn, p, p,\n\t\tp, p, n,\n\t\tn, p, n,\n\n\t\t// -Z\n\t\tp, n, n,\n\t\tn, n, n,\n\t\tn, p, n,\n\t\tp, n, n, \n\t\tn, p, n,\n\t\tp, p, n,\n\n\t\t// +Z\n\t\tn, n, p,\n\t\tp, n, p,\n\t\tp, p, p,\n\t\tn, n, p,\n\t\tp, p, p,\n\t\tn, p, p\n\n\t],\n\n\tnormal: [\n\n\t\t// -X\n\t\tn, 0, 0,\n\t\tn, 0, 0,\n\t\tn, 0, 0,\n\t\tn, 0, 0,\n\t\tn, 0, 0,\n\t\tn, 0, 0,\n\n\t\t// +X\n\t\tp, 0, 0,\n\t\tp, 0, 0,\n\t\tp, 0, 0,\n\t\tp, 0, 0,\n\t\tp, 0, 0,\n\t\tp, 0, 0,\n\n\t\t// -Y\n\t\t0, n, 0,\n\t\t0, n, 0,\n\t\t0, n, 0,\n\t\t0, n, 0,\n\t\t0, n, 0,\n\t\t0, n, 0,\n\n\t\t// +Y\n\t\t0, p, 0,\t\n\t\t0, p, 0,\t\n\t\t0, p, 0,\t\n\t\t0, p, 0,\t\n\t\t0, p, 0,\t\n\t\t0, p, 0,\t\n\n\t\t// -Z\n\t\t0, 0, n,\n\t\t0, 0, n,\n\t\t0, 0, n,\n\t\t0, 0, n,\n\t\t0, 0, n,\n\t\t0, 0, n,\n\n\t\t// +Z\n\t\t0, 0, p,\n\t\t0, 0, p,\n\t\t0, 0, p,\n\t\t0, 0, p,\n\t\t0, 0, p,\n\t\t0, 0, p\n\n\t]\n\n};","\"use strict\";\nvar shaders = {}; \nshaders [\"accumulator\"] = `#version 100\nprecision highp float;\n\nattribute vec3 aPosition;\n\nvoid main() {\n    gl_Position = vec4(aPosition, 1);\n}\n\n\n// __split__\n\n\n#version 100\nprecision highp float;\n\nuniform sampler2D uSceneDepth;\nuniform sampler2D uSceneNormal;\nuniform sampler2D uRandRotDepth;\nuniform sampler2D uAccumulator;\nuniform mat4 uRot;\nuniform mat4 uInvRot;\nuniform vec2 uSceneBottomLeft;\nuniform vec2 uSceneTopRight;\nuniform vec2 uRotBottomLeft;\nuniform vec2 uRotTopRight;\nuniform float uDepth;\nuniform float uRes;\nuniform int uSampleCount;\n\nvoid main() {\n\n    float dScene = texture2D(uSceneDepth, gl_FragCoord.xy/uRes).r;\n\n    vec3 r = vec3(uSceneBottomLeft + (gl_FragCoord.xy/uRes) * (uSceneTopRight - uSceneBottomLeft), 0.0);\n\n    r.z = -(dScene - 0.5) * uDepth;\n    r = vec3(uRot * vec4(r, 1));\n    float depth = -r.z/uDepth + 0.5;\n\n    vec2 p = (r.xy - uRotBottomLeft)/(uRotTopRight - uRotBottomLeft);\n\n    float dRandRot = texture2D(uRandRotDepth, p).r;\n\n    float ao = step(dRandRot, depth * 0.99);\n\n    vec3 normal = texture2D(uSceneNormal, gl_FragCoord.xy/uRes).rgb * 2.0 - 1.0;\n    vec3 dir = vec3(uInvRot * vec4(0, 0, 1, 0));\n    float mag = dot(dir, normal);\n    float sampled = step(0.0, mag);\n\n    ao *= sampled;\n\n    vec4 acc = texture2D(uAccumulator, gl_FragCoord.xy/uRes);\n\n    if (uSampleCount < 256) {\n        acc.r += ao/255.0;\n    } else if (uSampleCount < 512) {\n        acc.g += ao/255.0;\n    } else if (uSampleCount < 768) {\n        acc.b += ao/255.0;\n    } else {\n        acc.a += ao/255.0;\n    }\n        \n    gl_FragColor = acc;\n\n}\n`; \nshaders [\"ao\"] = `#version 100\nprecision highp float;\n\nattribute vec3 aPosition;\n\nvoid main() {\n    gl_Position = vec4(aPosition, 1);\n}\n\n\n// __split__\n\n\n#version 100\nprecision highp float;\n\nuniform sampler2D uSceneColor;\nuniform sampler2D uSceneDepth;\nuniform sampler2D uAccumulatorOut;\nuniform float uRes;\nuniform float uAO;\nuniform float uBrightness;\nuniform float uOutlineStrength;\n\nvoid main() {\n    vec2 p = gl_FragCoord.xy/uRes;\n    vec4 sceneColor = texture2D(uSceneColor, p);\n    if (uOutlineStrength > 0.0) {\n        float depth = texture2D(uSceneDepth, p).r;\n        float r = 1.0/511.0;\n        float d0 = abs(texture2D(uSceneDepth, p + vec2(-r,  0)).r - depth);\n        float d1 = abs(texture2D(uSceneDepth, p + vec2( r,  0)).r - depth);\n        float d2 = abs(texture2D(uSceneDepth, p + vec2( 0, -r)).r - depth);\n        float d3 = abs(texture2D(uSceneDepth, p + vec2( 0,  r)).r - depth);\n        float d = max(d0, d1);\n        d = max(d, d2);\n        d = max(d, d3);\n        sceneColor.rgb *= pow(1.0 - d, uOutlineStrength * 32.0);\n        sceneColor.a = max(step(0.003, d), sceneColor.a);\n    }\n    vec4 dAccum = texture2D(uAccumulatorOut, p);\n    float shade = max(0.0, 1.0 - (dAccum.r + dAccum.g + dAccum.b + dAccum.a) * 0.25 * uAO);\n    shade = pow(shade, 2.0);\n    gl_FragColor = vec4(uBrightness * sceneColor.rgb * shade, sceneColor.a);\n}\n`; \nshaders [\"atom\"] = `#version 100\nprecision highp float;\n\nattribute vec3 aImposter;\nattribute vec3 aPosition;\nattribute float aRadius;\nattribute vec3 aColor;\n\nuniform mat4 uView;\nuniform mat4 uProjection;\nuniform mat4 uModel;\nuniform float uAtomScale;\nuniform float uRelativeAtomScale;\nuniform float uAtomShade;\n\nvarying vec3 vColor;\nvarying vec3 vPosition;\nvarying float vRadius;\n\nvoid main() {\n    vRadius = uAtomScale * (1.0 + (aRadius - 1.0) * uRelativeAtomScale);\n    gl_Position = uProjection * uView * uModel * vec4(vRadius * aImposter + aPosition, 1.0);\n    vColor = mix(aColor, vec3(1,1,1), uAtomShade);\n    vPosition = vec3(uModel * vec4(aPosition, 1));\n}\n\n\n// __split__\n\n\n#version 100\n#extension GL_EXT_frag_depth: enable\nprecision highp float;\n\nuniform vec2 uBottomLeft;\nuniform vec2 uTopRight;\nuniform float uRes;\nuniform float uDepth;\nuniform int uMode;\n\nvarying vec3 vPosition;\nvarying float vRadius;\nvarying vec3 vColor;\n\nvec2 res = vec2(uRes, uRes);\n\nfloat raySphereIntersect(vec3 r0, vec3 rd) {\n    float a = dot(rd, rd);\n    vec3 s0_r0 = r0 - vPosition;\n    float b = 2.0 * dot(rd, s0_r0);\n    float c = dot(s0_r0, s0_r0) - (vRadius * vRadius);\n    float disc = b*b - 4.0*a*c;\n    if (disc <= 0.0) {\n        return -1.0;\n    }\n    return (-b - sqrt(disc))/(2.0*a);\n}\n\nvoid main() {\n    vec3 r0 = vec3(uBottomLeft + (gl_FragCoord.xy/res) * (uTopRight - uBottomLeft), 0.0);\n    vec3 rd = vec3(0, 0, -1);\n    float t = raySphereIntersect(r0, rd);\n    if (t < 0.0) {\n        discard;\n    }\n    vec3 coord = r0 + rd * t;\n    vec3 normal = normalize(coord - vPosition);\n    if (uMode == 0) {\n        gl_FragColor = vec4(vColor, 1);\n    } else if (uMode == 1) {\n        gl_FragColor = vec4(normal * 0.5 + 0.5, 1.0);\n    }\n    gl_FragDepthEXT = -coord.z/uDepth;\n}\n`; \nshaders [\"blur\"] = `#version 100\nprecision highp float;\n\nattribute vec3 aPosition;\n\nvoid main() {\n    gl_Position = vec4(aPosition, 1);\n}\n\n\n// __split__\n\n\n#version 100\nprecision highp float;\n\nuniform sampler2D uTexture;\nuniform float uRes;\nuniform int leftRight;\n\nvoid main() {\n    vec2 dir;\n    if (leftRight == 1) {\n        dir = vec2(1,0)/uRes;\n    } else {\n        dir = vec2(0,1)/uRes;\n    }\n    const int range = 16;\n    vec4 sample = vec4(0,0,0,0);\n    for (int i = -range; i <= range; i++) {\n        vec2 p = gl_FragCoord.xy/uRes + dir * float(i);\n        sample += texture2D(uTexture, p);\n    }\n    sample /= float(range) * 2.0 + 1.0;\n    gl_FragColor = sample;\n}\n`; \nshaders [\"bond\"] = `#version 100\nprecision highp float;\n\nattribute vec3 aImposter;\nattribute vec3 aPosA;\nattribute vec3 aPosB;\nattribute float aRadA;\nattribute float aRadB;\nattribute vec3 aColA;\nattribute vec3 aColB;\n\nuniform mat4 uView;\nuniform mat4 uProjection;\nuniform mat4 uModel;\nuniform mat4 uRotation;\nuniform float uBondRadius;\nuniform float uAtomScale;\nuniform float uRelativeAtomScale;\n\nvarying vec3 vNormal;\nvarying vec3 vPosA, vPosB;\nvarying float vRadA, vRadB;\nvarying vec3 vColA, vColB;\nvarying float vRadius;\n\nmat3 alignVector(vec3 a, vec3 b) {\n    vec3 v = cross(a, b);\n    float s = length(v);\n    float c = dot(a, b);\n    mat3 I = mat3(\n        1, 0, 0,\n        0, 1, 0,\n        0, 0, 1\n    );\n    mat3 vx = mat3(\n        0, v.z, -v.y,\n        -v.z, 0, v.x,\n        v.y, -v.x, 0\n    );\n    return I + vx + vx * vx * ((1.0 - c) / (s * s));\n}\n\nvoid main() {\n    vRadius = uBondRadius;\n    vec3 pos = vec3(aImposter);\n    // Scale the box in x and z to be bond-radius.\n    pos = pos * vec3(vRadius, 1, vRadius);\n    // Shift the origin-centered cube so that the bottom is at the origin.\n    pos = pos + vec3(0, 1, 0);\n    // Stretch the box in y so that it is the length of the bond.\n    pos = pos * vec3(1, length(aPosA - aPosB) * 0.5, 1);\n    // Find the rotation that aligns vec3(0, 1, 0) with vec3(uPosB - uPosA) and apply it.\n    vec3 a = normalize(vec3(-0.000001, 1.000001, 0.000001));\n    vec3 b = normalize(aPosB - aPosA);\n    mat3 R = alignVector(a, b);\n    pos = R * pos;\n    // Shift the cube so that the bottom is centered at the middle of atom A.\n    pos = pos + aPosA;\n\n    vec4 position = uModel * vec4(pos, 1);\n    gl_Position = uProjection * uView * position;\n    vPosA = aPosA;\n    vPosB = aPosB;\n    vRadA = uAtomScale * (1.0 + (aRadA - 1.0) * uRelativeAtomScale);\n    vRadB = uAtomScale * (1.0 + (aRadB - 1.0) * uRelativeAtomScale);\n    vColA = aColA;\n    vColB = aColB;\n}\n\n\n// __split__\n\n\n#version 100\n#extension GL_EXT_frag_depth: enable\nprecision highp float;\n\nuniform mat4 uRotation;\nuniform vec2 uBottomLeft;\nuniform vec2 uTopRight;\nuniform float uDepth;\nuniform float uRes;\nuniform float uBondShade;\nuniform int uMode;\n\nvarying vec3 vPosA, vPosB;\nvarying float vRadA, vRadB;\nvarying vec3 vColA, vColB;\nvarying float vRadius;\n\nmat3 alignVector(vec3 a, vec3 b) {\n    vec3 v = cross(a, b);\n    float s = length(v);\n    float c = dot(a, b);\n    mat3 I = mat3(\n        1, 0, 0,\n        0, 1, 0,\n        0, 0, 1\n    );\n    mat3 vx = mat3(\n        0, v.z, -v.y,\n        -v.z, 0, v.x,\n        v.y, -v.x, 0\n    );\n    return I + vx + vx * vx * ((1.0 - c) / (s * s));\n}\n\nvoid main() {\n\n    vec2 res = vec2(uRes, uRes);\n    vec3 r0 = vec3(uBottomLeft + (gl_FragCoord.xy/res) * (uTopRight - uBottomLeft), uDepth/2.0);\n    vec3 rd = vec3(0, 0, -1);\n\n    vec3 i = normalize(vPosB - vPosA);\n         i = vec3(uRotation * vec4(i, 0));\n    vec3 j = normalize(vec3(-0.000001, 1.000001, 0.000001));\n    mat3 R = alignVector(i, j);\n\n    vec3 r0p = r0 - vec3(uRotation * vec4(vPosA, 0));\n    r0p = R * r0p;\n    vec3 rdp = R * rd;\n\n    float a = dot(rdp.xz, rdp.xz);\n    float b = 2.0 * dot(rdp.xz, r0p.xz);\n    float c = dot(r0p.xz, r0p.xz) - vRadius*vRadius;\n    float disc = b*b - 4.0*a*c;\n    if (disc <= 0.0) {\n        discard;\n    }\n    float t = (-b - sqrt(disc))/(2.0*a);\n    if (t < 0.0) {\n        discard;\n    }\n\n    vec3 coord = r0p + rdp * t;\n    if (coord.y < 0.0 || coord.y > length(vPosA - vPosB)) {\n        discard;\n    }\n\n    vec3 color;\n    if (coord.y < vRadA + 0.5 * (length(vPosA - vPosB) - (vRadA + vRadB))) {\n        color = vColA;\n    } else {\n        color = vColB;\n    }\n\n    color = mix(color, vec3(1,1,1), uBondShade);\n\n    R = alignVector(j, i);\n    vec3 normal = normalize(R * vec3(coord.x, 0, coord.z));\n\n    coord = r0 + rd * t;\n    if (uMode == 0) {\n        gl_FragColor = vec4(color, 1);\n    } else if (uMode == 1) {\n        gl_FragColor = vec4(normal * 0.5 + 0.5, 1.0);\n    }\n    gl_FragDepthEXT = -(coord.z - uDepth/2.0)/uDepth;\n}\n`; \nshaders [\"dof\"] = `#version 100\nprecision highp float;\n\nattribute vec3 aPosition;\n\nvoid main() {\n    gl_Position = vec4(aPosition, 1);\n}\n\n\n// __split__\n\n\n#version 100\nprecision highp float;\n\nuniform sampler2D uColor;\nuniform sampler2D uDepth;\nuniform float uRes;\nuniform float uDOFPosition;\nuniform float uDOFStrength;\nuniform int leftRight;\n\nvoid main() {\n\n    vec2 samples[64];\n    samples[0] = vec2(0.857612, 0.019885);\n    samples[1] = vec2(0.563809, -0.028071);\n    samples[2] = vec2(0.825599, -0.346856);\n    samples[3] = vec2(0.126584, -0.380959);\n    samples[4] = vec2(0.782948, 0.594322);\n    samples[5] = vec2(0.292148, -0.543265);\n    samples[6] = vec2(0.130700, 0.330220);\n    samples[7] = vec2(0.236088, 0.159604);\n    samples[8] = vec2(-0.305259, 0.810505);\n    samples[9] = vec2(0.269616, 0.923026);\n    samples[10] = vec2(0.484486, 0.371845);\n    samples[11] = vec2(-0.638057, 0.080447);\n    samples[12] = vec2(0.199629, 0.667280);\n    samples[13] = vec2(-0.861043, -0.370583);\n    samples[14] = vec2(-0.040652, -0.996174);\n    samples[15] = vec2(0.330458, -0.282111);\n    samples[16] = vec2(0.647795, -0.214354);\n    samples[17] = vec2(0.030422, -0.189908);\n    samples[18] = vec2(0.177430, -0.721124);\n    samples[19] = vec2(-0.461163, -0.327434);\n    samples[20] = vec2(-0.410012, -0.734504);\n    samples[21] = vec2(-0.616334, -0.626069);\n    samples[22] = vec2(0.590759, -0.726479);\n    samples[23] = vec2(-0.590794, 0.805365);\n    samples[24] = vec2(-0.924561, -0.163739);\n    samples[25] = vec2(-0.323028, 0.526960);\n    samples[26] = vec2(0.642128, 0.752577);\n    samples[27] = vec2(0.173625, -0.952386);\n    samples[28] = vec2(0.759014, 0.330311);\n    samples[29] = vec2(-0.360526, -0.032013);\n    samples[30] = vec2(-0.035320, 0.968156);\n    samples[31] = vec2(0.585478, -0.431068);\n    samples[32] = vec2(-0.244766, -0.906947);\n    samples[33] = vec2(-0.853096, 0.184615);\n    samples[34] = vec2(-0.089061, 0.104648);\n    samples[35] = vec2(-0.437613, 0.285308);\n    samples[36] = vec2(-0.654098, 0.379841);\n    samples[37] = vec2(-0.128663, 0.456572);\n    samples[38] = vec2(0.015980, -0.568170);\n    samples[39] = vec2(-0.043966, -0.771940);\n    samples[40] = vec2(0.346512, -0.071238);\n    samples[41] = vec2(-0.207921, -0.209121);\n    samples[42] = vec2(-0.624075, -0.189224);\n    samples[43] = vec2(-0.120618, 0.689339);\n    samples[44] = vec2(-0.664679, -0.410200);\n    samples[45] = vec2(0.371945, -0.880573);\n    samples[46] = vec2(-0.743251, 0.629998);\n    samples[47] = vec2(-0.191926, -0.413946);\n    samples[48] = vec2(0.449574, 0.833373);\n    samples[49] = vec2(0.299587, 0.449113);\n    samples[50] = vec2(-0.900432, 0.399319);\n    samples[51] = vec2(0.762613, -0.544796);\n    samples[52] = vec2(0.606462, 0.174233);\n    samples[53] = vec2(0.962185, -0.167019);\n    samples[54] = vec2(0.960990, 0.249552);\n    samples[55] = vec2(0.570397, 0.559146);\n    samples[56] = vec2(-0.537514, 0.555019);\n    samples[57] = vec2(0.108491, -0.003232);\n    samples[58] = vec2(-0.237693, -0.615428);\n    samples[59] = vec2(-0.217313, 0.261084);\n    samples[60] = vec2(-0.998966, 0.025692);\n    samples[61] = vec2(-0.418554, -0.527508);\n    samples[62] = vec2(-0.822629, -0.567797);\n    samples[63] = vec2(0.061945, 0.522105);\n\n    float invRes = 1.0/uRes;\n    vec2 coord = gl_FragCoord.xy * invRes;\n\n    float strength = uDOFStrength * uRes/768.0;\n\n    float depth = texture2D(uDepth, coord).r;\n    float range = uDOFPosition - depth;\n    float scale = abs(range);\n\n    vec4 sample = texture2D(uColor, coord);\n    float count = 1.0;\n    for(int i = 0; i < 64; i++) {\n        vec2 p = samples[i];\n        p = coord + scale * 64.0 * strength * p * invRes;\n        float d = texture2D(uDepth, p).r;\n        float r = uDOFPosition - d;\n        float s = abs(r);\n        sample += texture2D(uColor, p) * s;\n        count += s;\n    }\n\n    gl_FragColor = sample/count;\n}`; \nshaders [\"fxaa\"] = `#version 100\nprecision highp float;\n\nattribute vec3 aPosition;\n\nvoid main() {\n    gl_Position = vec4(aPosition, 1);\n}\n\n\n// __split__\n\n\n#version 100\nprecision highp float;\n\nuniform sampler2D uTexture;\nuniform float uRes;\n\nvoid main() {\n    float FXAA_SPAN_MAX = 8.0;\n    float FXAA_REDUCE_MUL = 1.0/8.0;\n    float FXAA_REDUCE_MIN = 1.0/128.0;\n\n    vec2 texCoords = gl_FragCoord.xy/uRes;\n\n    vec4 rgbNW = texture2D(uTexture, texCoords + (vec2(-1.0, -1.0) / uRes));\n    vec4 rgbNE = texture2D(uTexture, texCoords + (vec2(1.0, -1.0) / uRes));\n    vec4 rgbSW = texture2D(uTexture, texCoords + (vec2(-1.0, 1.0) / uRes));\n    vec4 rgbSE = texture2D(uTexture, texCoords + (vec2(1.0, 1.0) / uRes));\n    vec4 rgbM  = texture2D(uTexture, texCoords);\n\n    vec4 luma = vec4(0.299, 0.587, 0.114, 1.0);\n    float lumaNW = dot(rgbNW, luma);\n    float lumaNE = dot(rgbNE, luma);\n    float lumaSW = dot(rgbSW, luma);\n    float lumaSE = dot(rgbSE, luma);\n    float lumaM  = dot(rgbM,  luma);\n\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n\n    vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) * (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\n\n    float rcpDirMin = 1.0/(min(abs(dir.x), abs(dir.y)) + dirReduce);\n\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX), max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX), dir * rcpDirMin)) / uRes;\n\n    vec4 rgbA = (1.0/2.0) * \n        (texture2D(uTexture, texCoords.xy + dir * (1.0/3.0 - 0.5)) + \n         texture2D(uTexture, texCoords.xy + dir * (2.0/3.0 - 0.5)));\n    vec4 rgbB = rgbA * (1.0/2.0) + (1.0/4.0) * \n        (texture2D(uTexture, texCoords.xy + dir * (0.0/3.0 - 0.5)) +\n         texture2D(uTexture, texCoords.xy + dir * (3.0/3.0 - 0.5)));\n    float lumaB = dot(rgbB, luma);\n\n    if((lumaB < lumaMin) || (lumaB > lumaMax)){\n        gl_FragColor = rgbA;\n    } else {\n        gl_FragColor = rgbB;\n    }\n\n}`; \nshaders [\"textured-quad\"] = `#version 100\nprecision highp float;\n\nattribute vec3 aPosition;\n\nvoid main() {\n    gl_Position = vec4(aPosition, 1);\n}\n\n\n// __split__\n\n\n#version 100\nprecision highp float;\n\nuniform sampler2D uTexture;\nuniform float uRes;\n\nvoid main() {\n    gl_FragColor = texture2D(uTexture, gl_FragCoord.xy/uRes);\n}\n`; \nmodule.exports = {shaders};\n","\"use strict\";\n\nvar speckView = require(\"./view.js\");\n\nmodule.exports = function(args) {\n    if(arguments.length > 1) {\n        throw \"Error: The Speck Interactions module has changed!\";\n    }\n    else if((arguments.length === 0) || (typeof args !== \"object\")) {\n        throw \"Error: Arguments not provided to interactions\";\n    }\n\n    var scrollZoom = args.scrollZoom === undefined ? true : args.scrollZoom;\n    var container = args.container;\n\n    var getRotation = args.getRotation;\n    var setRotation = args.setRotation;\n\n    var getTranslation = args.getTranslation;\n    var setTranslation = args.setTranslation;\n\n    var getZoom = args.getZoom;\n    var setZoom = args.setZoom;\n\n    var refreshView = args.refreshView;\n\n    var interactions = {\n        buttonDown: false,\n        shiftDown: false,\n        lastX: 0.0,\n        lastY: 0.0\n    };\n\n    function mousedownFn(e) {\n        if(e.button === 0) {\n            interactions = {\n                buttonDown: true,\n                shiftDown: interactions.shiftDown,\n                lastX: e.clientX,\n                lastY: e.clientY\n            };\n        }\n    }\n    container.addEventListener(\"mousedown\", mousedownFn);\n\n    function mouseupFn(e) {\n        if(e.button === 0) {\n            if(!interactions.buttonDown) {\n                return;\n            }\n\n            interactions.buttonDown = false;\n        }\n    }\n    window.addEventListener(\"mouseup\", mouseupFn);\n\n    function keychangeFn(e) {\n        interactions.shiftDown = e.shiftKey;\n    }\n    window.addEventListener(\"keydown\", keychangeFn);\n    window.addEventListener(\"keyup\", keychangeFn);\n\n    function mousemoveFn(e) {\n        if(!interactions.buttonDown || (e.buttons === 0)){\n            return;\n        }\n\n        // prevents interaction with other page elements while dragging\n        e.preventDefault();\n\n        var dx = e.clientX - interactions.lastX;\n        var dy = e.clientY - interactions.lastY;\n        if(dx === 0 && dy === 0) {\n            return;\n        }\n\n        interactions.lastX = e.clientX;\n        interactions.lastY = e.clientY;\n\n        if(interactions.shiftDown) {\n            var translation = getTranslation();\n            var inverseZoom = 0.001/getZoom();\n            setTranslation({\n                x: translation.x - dx * inverseZoom,\n                y: translation.y + dy * inverseZoom\n            });\n        }\n        else {\n            var viewDummyObj = {\n                rotation: new Float32Array(getRotation())\n            };\n            speckView.rotate(viewDummyObj, dx, dy);\n\n            setRotation(viewDummyObj.rotation);\n        }\n        refreshView();\n    }\n    window.addEventListener(\"mousemove\", mousemoveFn);\n\n    function wheelFn(e) {\n        // prevents the page from scrolling when using scroll wheel inside speck component\n        e.preventDefault();\n\n        setZoom(getZoom() * (e.deltaY < 0 ? 1/0.9 : 0.9));\n        refreshView();\n\n    }\n    if(scrollZoom) {\n        container.addEventListener(\"wheel\", wheelFn);\n    }\n\n    function removeAllEventListeners() {\n        container.removeEventListener(\"mousedown\", mousedownFn);\n        window.removeEventListener(\"mouseup\", mouseupFn);\n        window.removeEventListener(\"keydown\", keychangeFn);\n        window.removeEventListener(\"keyup\", keychangeFn);\n        window.removeEventListener(\"mousemove\", mousemoveFn);\n        container.removeEventListener(\"wheel\", wheelFn);\n    }\n\n    return removeAllEventListeners;\n}\n","module.exports = {};\n\nvar reference_struct_colors = [\n                               [1.000, 0.000, 1.000],\n                               [1.000, 1.000, 1.000],\n                               [0.596, 0.921, 0.204],\n                               ]\n\nvar standard_schema = {\n  'Ac' : [0.439, 0.671, 0.980],\n  'Ag' : [0.753, 0.753, 0.753],\n  'Al' : [0.749, 0.651, 0.651],\n  'Am' : [0.329, 0.361, 0.949],\n  'Ar' : [0.502, 0.820, 0.890],\n  'As' : [0.741, 0.502, 0.890],\n  'At' : [0.459, 0.310, 0.271],\n  'Au' : [1.000, 0.820, 0.137],\n  'B' : [1.000, 0.710, 0.710],\n  'Ba' : [0.000, 0.788, 0.000],\n  'Be' : [0.761, 1.000, 0.000],\n  'Bh' : [0.878, 0.000, 0.220],\n  'Bi' : [0.620, 0.310, 0.710],\n  'Bk' : [0.541, 0.310, 0.890],\n  'Br' : [0.651, 0.161, 0.161],\n  'C' : [0.565, 0.565, 0.565],\n  'Ca' : [0.239, 1.000, 0.000],\n  'Cd' : [1.000, 0.851, 0.561],\n  'Ce' : [1.000, 1.000, 0.780],\n  'Cf' : [0.631, 0.212, 0.831],\n  'Cl' : [0.122, 0.941, 0.122],\n  'Cm' : [0.471, 0.361, 0.890],\n  'Co' : [0.941, 0.565, 0.627],\n  'Cr' : [0.541, 0.600, 0.780],\n  'Cs' : [0.341, 0.090, 0.561],\n  'Cu' : [0.784, 0.502, 0.200],\n  'Db' : [0.820, 0.000, 0.310],\n  'Dy' : [0.122, 1.000, 0.780],\n  'Er' : [0.000, 0.902, 0.459],\n  'Es' : [0.702, 0.122, 0.831],\n  'Eu' : [0.380, 1.000, 0.780],\n  'F' : [0.565, 0.878, 0.314],\n  'Fe' : [0.878, 0.400, 0.200],\n  'Fm' : [0.702, 0.122, 0.729],\n  'Fr' : [0.259, 0.000, 0.400],\n  'Ga' : [0.761, 0.561, 0.561],\n  'Gd' : [0.271, 1.000, 0.780],\n  'Ge' : [0.400, 0.561, 0.561],\n  'H' : [1.000, 1.000, 1.000],\n  'He' : [0.851, 1.000, 1.000],\n  'Hf' : [0.302, 0.761, 1.000],\n  'Hg' : [0.722, 0.722, 0.816],\n  'Ho' : [0.000, 1.000, 0.612],\n  'Hs' : [0.902, 0.000, 0.180],\n  'I' : [0.580, 0.000, 0.580],\n  'In' : [0.651, 0.459, 0.451],\n  'Ir' : [0.090, 0.329, 0.529],\n  'K' : [0.561, 0.251, 0.831],\n  'Kr' : [0.361, 0.722, 0.820],\n  'La' : [0.439, 0.831, 1.000],\n  'Li' : [0.800, 0.502, 1.000],\n  'Lr' : [0.780, 0.000, 0.400],\n  'Lu' : [0.000, 0.671, 0.141],\n  'Md' : [0.702, 0.051, 0.651],\n  'Mg' : [0.541, 1.000, 0.000],\n  'Mn' : [0.611, 0.478, 0.780],\n  'Mo' : [0.329, 0.710, 0.710],\n  'Mt' : [0.922, 0.000, 0.149],\n  'N' : [0.188, 0.314, 0.973],\n  'Na' : [0.671, 0.361, 0.949],\n  'Nb' : [0.451, 0.761, 0.788],\n  'Nd' : [0.780, 1.000, 0.780],\n  'Ne' : [0.702, 0.890, 0.961],\n  'Ni' : [0.314, 0.816, 0.314],\n  'No' : [0.741, 0.051, 0.529],\n  'Np' : [0.000, 0.502, 1.000],\n  'O' : [1.000, 0.051, 0.051],\n  'Os' : [0.149, 0.400, 0.588],\n  'P' : [1.000, 0.502, 0.000],\n  'Pa' : [0.000, 0.631, 1.000],\n  'Pb' : [0.341, 0.349, 0.380],\n  'Pd' : [0.000, 0.412, 0.522],\n  'Pm' : [0.639, 1.000, 0.780],\n  'Po' : [0.671, 0.361, 0.000],\n  'Pr' : [0.851, 1.000, 0.780],\n  'Pt' : [0.816, 0.816, 0.878],\n  'Pu' : [0.000, 0.420, 1.000],\n  'Ra' : [0.000, 0.490, 0.000],\n  'Rb' : [0.439, 0.180, 0.690],\n  'Re' : [0.149, 0.490, 0.671],\n  'Rf' : [0.800, 0.000, 0.349],\n  'Rh' : [0.039, 0.490, 0.549],\n  'Rn' : [0.259, 0.510, 0.588],\n  'Ru' : [0.141, 0.561, 0.561],\n  'S' : [1.000, 1.000, 0.188],\n  'Sb' : [0.620, 0.388, 0.710],\n  'Sc' : [0.902, 0.902, 0.902],\n  'Se' : [1.000, 0.631, 0.000],\n  'Sg' : [0.851, 0.000, 0.271],\n  'Si' : [0.941, 0.784, 0.627],\n  'Sm' : [0.561, 1.000, 0.780],\n  'Sn' : [0.400, 0.502, 0.502],\n  'Sr' : [0.000, 1.000, 0.000],\n  'Ta' : [0.302, 0.651, 1.000],\n  'Tb' : [0.189, 1.000, 0.780],\n  'Tc' : [0.231, 0.620, 0.620],\n  'Te' : [0.831, 0.478, 0.000],\n  'Th' : [0.000, 0.729, 1.000],\n  'Ti' : [0.749, 0.761, 0.780],\n  'Tl' : [0.651, 0.329, 0.302],\n  'Tm' : [0.000, 0.831, 0.322],\n  'U' : [0.000, 0.561, 1.000],\n  'V' : [0.651, 0.651, 0.671],\n  'W' : [0.129, 0.580, 0.839],\n  'Xe' : [0.259, 0.620, 0.690],\n  'Y' : [0.580, 1.000, 1.000],\n  'Yb' : [0.000, 0.749, 0.220],\n  'Zn' : [0.490, 0.502, 0.690],\n  'Zr' : [0.580, 0.878, 0.878],\n}\n\nfor (var i = 0; i < reference_struct_colors.length; i++) {\n    var name = 'speck_' + i\n    var schema = Object.assign({}, standard_schema)\n    schema['Ref'] = reference_struct_colors[i]\n    module.exports[name] = schema\n}\n"],"sourceRoot":""}